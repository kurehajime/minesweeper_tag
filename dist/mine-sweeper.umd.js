(function(IA,oA){typeof exports=="object"&&typeof module<"u"?oA(exports):typeof define=="function"&&define.amd?define(["exports"],oA):(IA=typeof globalThis<"u"?globalThis:IA||self,oA(IA.MineSweeper={}))})(this,function(IA){"use strict";var pc=Object.defineProperty;var fc=(IA,oA,wA)=>oA in IA?pc(IA,oA,{enumerable:!0,configurable:!0,writable:!0,value:wA}):IA[oA]=wA;var Qe=(IA,oA,wA)=>(fc(IA,typeof oA!="symbol"?oA+"":oA,wA),wA);function oA(A,e){const t=Object.create(null),o=A.split(",");for(let n=0;n<o.length;n++)t[o[n]]=!0;return e?n=>!!t[n.toLowerCase()]:n=>!!t[n]}function wA(A){if(S(A)){const e={};for(let t=0;t<A.length;t++){const o=A[t],n=AA(o)?Us(o):wA(o);if(n)for(const s in n)e[s]=n[s]}return e}else{if(AA(A))return A;if(F(A))return A}}const Os=/;(?![^(]*\))/g,Rs=/:([^]+)/,Ds=/\/\*.*?\*\//gs;function Us(A){const e={};return A.replace(Ds,"").split(Os).forEach(t=>{if(t){const o=t.split(Rs);o.length>1&&(e[o[0].trim()]=o[1].trim())}}),e}function Tt(A){let e="";if(AA(A))e=A;else if(S(A))for(let t=0;t<A.length;t++){const o=Tt(A[t]);o&&(e+=o+" ")}else if(F(A))for(const t in A)A[t]&&(e+=t+" ");return e.trim()}const Ks=oA("itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly");function Vo(A){return!!A||A===""}const Pe=A=>AA(A)?A:A==null?"":S(A)||F(A)&&(A.toString===Fo||!O(A.toString))?JSON.stringify(A,Jo,2):String(A),Jo=(A,e)=>e&&e.__v_isRef?Jo(A,e.value):te(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[o,n])=>(t[`${o} =>`]=n,t),{})}:Zo(e)?{[`Set(${e.size})`]:[...e.values()]}:F(e)&&!S(e)&&!bo(e)?String(e):e,q=process.env.NODE_ENV!=="production"?Object.freeze({}):{},Me=process.env.NODE_ENV!=="production"?Object.freeze([]):[],iA=()=>{},jo=()=>!1,ks=/^on[^a-z]/,Oe=A=>ks.test(A),_e=A=>A.startsWith("onUpdate:"),_=Object.assign,Vt=(A,e)=>{const t=A.indexOf(e);t>-1&&A.splice(t,1)},Ts=Object.prototype.hasOwnProperty,K=(A,e)=>Ts.call(A,e),S=Array.isArray,te=A=>$e(A)==="[object Map]",Zo=A=>$e(A)==="[object Set]",O=A=>typeof A=="function",AA=A=>typeof A=="string",Jt=A=>typeof A=="symbol",F=A=>A!==null&&typeof A=="object",jt=A=>F(A)&&O(A.then)&&O(A.catch),Fo=Object.prototype.toString,$e=A=>Fo.call(A),Zt=A=>$e(A).slice(8,-1),bo=A=>$e(A)==="[object Object]",Ft=A=>AA(A)&&A!=="NaN"&&A[0]!=="-"&&""+parseInt(A,10)===A,At=oA(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Vs=oA("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),et=A=>{const e=Object.create(null);return t=>e[t]||(e[t]=A(t))},Js=/-(\w)/g,VA=et(A=>A.replace(Js,(e,t)=>t?t.toUpperCase():"")),js=/\B([A-Z])/g,EA=et(A=>A.replace(js,"-$1").toLowerCase()),tt=et(A=>A.charAt(0).toUpperCase()+A.slice(1)),oe=et(A=>A?`on${tt(A)}`:""),Re=(A,e)=>!Object.is(A,e),De=(A,e)=>{for(let t=0;t<A.length;t++)A[t](e)},ot=(A,e,t)=>{Object.defineProperty(A,e,{configurable:!0,enumerable:!1,value:t})},nt=A=>{const e=parseFloat(A);return isNaN(e)?A:e};let qo;const Wo=()=>qo||(qo=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function bt(A,...e){console.warn(`[Vue warn] ${A}`,...e)}let YA;class Zs{constructor(e=!1){this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=YA,!e&&YA&&(this.index=(YA.scopes||(YA.scopes=[])).push(this)-1)}run(e){if(this.active){const t=YA;try{return YA=this,e()}finally{YA=t}}else process.env.NODE_ENV!=="production"&&bt("cannot run an inactive effect scope.")}on(){YA=this}off(){YA=this.parent}stop(e){if(this.active){let t,o;for(t=0,o=this.effects.length;t<o;t++)this.effects[t].stop();for(t=0,o=this.cleanups.length;t<o;t++)this.cleanups[t]();if(this.scopes)for(t=0,o=this.scopes.length;t<o;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const n=this.parent.scopes.pop();n&&n!==this&&(this.parent.scopes[this.index]=n,n.index=this.index)}this.parent=void 0,this.active=!1}}}function Fs(A,e=YA){e&&e.active&&e.effects.push(A)}const Ue=A=>{const e=new Set(A);return e.w=0,e.n=0,e},Lo=A=>(A.w&zA)>0,zo=A=>(A.n&zA)>0,bs=({deps:A})=>{if(A.length)for(let e=0;e<A.length;e++)A[e].w|=zA},qs=A=>{const{deps:e}=A;if(e.length){let t=0;for(let o=0;o<e.length;o++){const n=e[o];Lo(n)&&!zo(n)?n.delete(A):e[t++]=n,n.w&=~zA,n.n&=~zA}e.length=t}},qt=new WeakMap;let Ke=0,zA=1;const Wt=30;let uA;const ne=Symbol(process.env.NODE_ENV!=="production"?"iterate":""),Lt=Symbol(process.env.NODE_ENV!=="production"?"Map key iterate":"");class zt{constructor(e,t=null,o){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,Fs(this,o)}run(){if(!this.active)return this.fn();let e=uA,t=HA;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=uA,uA=this,HA=!0,zA=1<<++Ke,Ke<=Wt?bs(this):Ho(this),this.fn()}finally{Ke<=Wt&&qs(this),zA=1<<--Ke,uA=this.parent,HA=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){uA===this?this.deferStop=!0:this.active&&(Ho(this),this.onStop&&this.onStop(),this.active=!1)}}function Ho(A){const{deps:e}=A;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(A);e.length=0}}let HA=!0;const vo=[];function se(){vo.push(HA),HA=!1}function ie(){const A=vo.pop();HA=A===void 0?!0:A}function hA(A,e,t){if(HA&&uA){let o=qt.get(A);o||qt.set(A,o=new Map);let n=o.get(t);n||o.set(t,n=Ue());const s=process.env.NODE_ENV!=="production"?{effect:uA,target:A,type:e,key:t}:void 0;Ht(n,s)}}function Ht(A,e){let t=!1;Ke<=Wt?zo(A)||(A.n|=zA,t=!Lo(A)):t=!A.has(uA),t&&(A.add(uA),uA.deps.push(A),process.env.NODE_ENV!=="production"&&uA.onTrack&&uA.onTrack(Object.assign({effect:uA},e)))}function JA(A,e,t,o,n,s){const i=qt.get(A);if(!i)return;let l=[];if(e==="clear")l=[...i.values()];else if(t==="length"&&S(A)){const u=nt(o);i.forEach((f,p)=>{(p==="length"||p>=u)&&l.push(f)})}else switch(t!==void 0&&l.push(i.get(t)),e){case"add":S(A)?Ft(t)&&l.push(i.get("length")):(l.push(i.get(ne)),te(A)&&l.push(i.get(Lt)));break;case"delete":S(A)||(l.push(i.get(ne)),te(A)&&l.push(i.get(Lt)));break;case"set":te(A)&&l.push(i.get(ne));break}const c=process.env.NODE_ENV!=="production"?{target:A,type:e,key:t,newValue:o,oldValue:n,oldTarget:s}:void 0;if(l.length===1)l[0]&&(process.env.NODE_ENV!=="production"?Ce(l[0],c):Ce(l[0]));else{const u=[];for(const f of l)f&&u.push(...f);process.env.NODE_ENV!=="production"?Ce(Ue(u),c):Ce(Ue(u))}}function Ce(A,e){const t=S(A)?A:[...A];for(const o of t)o.computed&&Xo(o,e);for(const o of t)o.computed||Xo(o,e)}function Xo(A,e){(A!==uA||A.allowRecurse)&&(process.env.NODE_ENV!=="production"&&A.onTrigger&&A.onTrigger(_({effect:A},e)),A.scheduler?A.scheduler():A.run())}const Ws=oA("__proto__,__v_isRef,__isVue"),Po=new Set(Object.getOwnPropertyNames(Symbol).filter(A=>A!=="arguments"&&A!=="caller").map(A=>Symbol[A]).filter(Jt)),Ls=st(),zs=st(!1,!0),Hs=st(!0),vs=st(!0,!0),_o=Xs();function Xs(){const A={};return["includes","indexOf","lastIndexOf"].forEach(e=>{A[e]=function(...t){const o=U(this);for(let s=0,i=this.length;s<i;s++)hA(o,"get",s+"");const n=o[e](...t);return n===-1||n===!1?o[e](...t.map(U)):n}}),["push","pop","shift","unshift","splice"].forEach(e=>{A[e]=function(...t){se();const o=U(this)[e].apply(this,t);return ie(),o}}),A}function st(A=!1,e=!1){return function(o,n,s){if(n==="__v_isReactive")return!A;if(n==="__v_isReadonly")return A;if(n==="__v_isShallow")return e;if(n==="__v_raw"&&s===(A?e?un:an:e?cn:ln).get(o))return o;const i=S(o);if(!A&&i&&K(_o,n))return Reflect.get(_o,n,s);const l=Reflect.get(o,n,s);return(Jt(n)?Po.has(n):Ws(n))||(A||hA(o,"get",n),e)?l:nA(l)?i&&Ft(n)?l:l.value:F(l)?A?pn(l):Xt(l):l}}const Ps=$o(),_s=$o(!0);function $o(A=!1){return function(t,o,n,s){let i=t[o];if(XA(i)&&nA(i)&&!nA(n))return!1;if(!A&&(!ht(n)&&!XA(n)&&(i=U(i),n=U(n)),!S(t)&&nA(i)&&!nA(n)))return i.value=n,!0;const l=S(t)&&Ft(o)?Number(o)<t.length:K(t,o),c=Reflect.set(t,o,n,s);return t===U(s)&&(l?Re(n,i)&&JA(t,"set",o,n,i):JA(t,"add",o,n)),c}}function $s(A,e){const t=K(A,e),o=A[e],n=Reflect.deleteProperty(A,e);return n&&t&&JA(A,"delete",e,void 0,o),n}function Ai(A,e){const t=Reflect.has(A,e);return(!Jt(e)||!Po.has(e))&&hA(A,"has",e),t}function ei(A){return hA(A,"iterate",S(A)?"length":ne),Reflect.ownKeys(A)}const An={get:Ls,set:Ps,deleteProperty:$s,has:Ai,ownKeys:ei},en={get:Hs,set(A,e){return process.env.NODE_ENV!=="production"&&bt(`Set operation on key "${String(e)}" failed: target is readonly.`,A),!0},deleteProperty(A,e){return process.env.NODE_ENV!=="production"&&bt(`Delete operation on key "${String(e)}" failed: target is readonly.`,A),!0}},ti=_({},An,{get:zs,set:_s}),oi=_({},en,{get:vs}),vt=A=>A,it=A=>Reflect.getPrototypeOf(A);function rt(A,e,t=!1,o=!1){A=A.__v_raw;const n=U(A),s=U(e);t||(e!==s&&hA(n,"get",e),hA(n,"get",s));const{has:i}=it(n),l=o?vt:t?_t:ke;if(i.call(n,e))return l(A.get(e));if(i.call(n,s))return l(A.get(s));A!==n&&A.get(e)}function lt(A,e=!1){const t=this.__v_raw,o=U(t),n=U(A);return e||(A!==n&&hA(o,"has",A),hA(o,"has",n)),A===n?t.has(A):t.has(A)||t.has(n)}function ct(A,e=!1){return A=A.__v_raw,!e&&hA(U(A),"iterate",ne),Reflect.get(A,"size",A)}function tn(A){A=U(A);const e=U(this);return it(e).has.call(e,A)||(e.add(A),JA(e,"add",A,A)),this}function on(A,e){e=U(e);const t=U(this),{has:o,get:n}=it(t);let s=o.call(t,A);s?process.env.NODE_ENV!=="production"&&rn(t,o,A):(A=U(A),s=o.call(t,A));const i=n.call(t,A);return t.set(A,e),s?Re(e,i)&&JA(t,"set",A,e,i):JA(t,"add",A,e),this}function nn(A){const e=U(this),{has:t,get:o}=it(e);let n=t.call(e,A);n?process.env.NODE_ENV!=="production"&&rn(e,t,A):(A=U(A),n=t.call(e,A));const s=o?o.call(e,A):void 0,i=e.delete(A);return n&&JA(e,"delete",A,void 0,s),i}function sn(){const A=U(this),e=A.size!==0,t=process.env.NODE_ENV!=="production"?te(A)?new Map(A):new Set(A):void 0,o=A.clear();return e&&JA(A,"clear",void 0,void 0,t),o}function at(A,e){return function(o,n){const s=this,i=s.__v_raw,l=U(i),c=e?vt:A?_t:ke;return!A&&hA(l,"iterate",ne),i.forEach((u,f)=>o.call(n,c(u),c(f),s))}}function ut(A,e,t){return function(...o){const n=this.__v_raw,s=U(n),i=te(s),l=A==="entries"||A===Symbol.iterator&&i,c=A==="keys"&&i,u=n[A](...o),f=t?vt:e?_t:ke;return!e&&hA(s,"iterate",c?Lt:ne),{next(){const{value:p,done:E}=u.next();return E?{value:p,done:E}:{value:l?[f(p[0]),f(p[1])]:f(p),done:E}},[Symbol.iterator](){return this}}}}function vA(A){return function(...e){if(process.env.NODE_ENV!=="production"){const t=e[0]?`on key "${e[0]}" `:"";console.warn(`${tt(A)} operation ${t}failed: target is readonly.`,U(this))}return A==="delete"?!1:this}}function ni(){const A={get(s){return rt(this,s)},get size(){return ct(this)},has:lt,add:tn,set:on,delete:nn,clear:sn,forEach:at(!1,!1)},e={get(s){return rt(this,s,!1,!0)},get size(){return ct(this)},has:lt,add:tn,set:on,delete:nn,clear:sn,forEach:at(!1,!0)},t={get(s){return rt(this,s,!0)},get size(){return ct(this,!0)},has(s){return lt.call(this,s,!0)},add:vA("add"),set:vA("set"),delete:vA("delete"),clear:vA("clear"),forEach:at(!0,!1)},o={get(s){return rt(this,s,!0,!0)},get size(){return ct(this,!0)},has(s){return lt.call(this,s,!0)},add:vA("add"),set:vA("set"),delete:vA("delete"),clear:vA("clear"),forEach:at(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{A[s]=ut(s,!1,!1),t[s]=ut(s,!0,!1),e[s]=ut(s,!1,!0),o[s]=ut(s,!0,!0)}),[A,t,e,o]}const[si,ii,ri,li]=ni();function pt(A,e){const t=e?A?li:ri:A?ii:si;return(o,n,s)=>n==="__v_isReactive"?!A:n==="__v_isReadonly"?A:n==="__v_raw"?o:Reflect.get(K(t,n)&&n in o?t:o,n,s)}const ci={get:pt(!1,!1)},ai={get:pt(!1,!0)},ui={get:pt(!0,!1)},pi={get:pt(!0,!0)};function rn(A,e,t){const o=U(t);if(o!==t&&e.call(A,o)){const n=Zt(A);console.warn(`Reactive ${n} contains both the raw and reactive versions of the same object${n==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}const ln=new WeakMap,cn=new WeakMap,an=new WeakMap,un=new WeakMap;function fi(A){switch(A){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function hi(A){return A.__v_skip||!Object.isExtensible(A)?0:fi(Zt(A))}function Xt(A){return XA(A)?A:ft(A,!1,An,ci,ln)}function di(A){return ft(A,!1,ti,ai,cn)}function pn(A){return ft(A,!0,en,ui,an)}function Ie(A){return ft(A,!0,oi,pi,un)}function ft(A,e,t,o,n){if(!F(A))return process.env.NODE_ENV!=="production"&&console.warn(`value cannot be made reactive: ${String(A)}`),A;if(A.__v_raw&&!(e&&A.__v_isReactive))return A;const s=n.get(A);if(s)return s;const i=hi(A);if(i===0)return A;const l=new Proxy(A,i===2?o:t);return n.set(A,l),l}function re(A){return XA(A)?re(A.__v_raw):!!(A&&A.__v_isReactive)}function XA(A){return!!(A&&A.__v_isReadonly)}function ht(A){return!!(A&&A.__v_isShallow)}function Pt(A){return re(A)||XA(A)}function U(A){const e=A&&A.__v_raw;return e?U(e):A}function fn(A){return ot(A,"__v_skip",!0),A}const ke=A=>F(A)?Xt(A):A,_t=A=>F(A)?pn(A):A;function hn(A){HA&&uA&&(A=U(A),process.env.NODE_ENV!=="production"?Ht(A.dep||(A.dep=Ue()),{target:A,type:"get",key:"value"}):Ht(A.dep||(A.dep=Ue())))}function dn(A,e){A=U(A),A.dep&&(process.env.NODE_ENV!=="production"?Ce(A.dep,{target:A,type:"set",key:"value",newValue:e}):Ce(A.dep))}function nA(A){return!!(A&&A.__v_isRef===!0)}function Te(A){return gi(A,!1)}function gi(A,e){return nA(A)?A:new Ei(A,e)}class Ei{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:U(e),this._value=t?e:ke(e)}get value(){return hn(this),this._value}set value(e){const t=this.__v_isShallow||ht(e)||XA(e);e=t?e:U(e),Re(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:ke(e),dn(this,e))}}function Q(A){return nA(A)?A.value:A}const mi={get:(A,e,t)=>Q(Reflect.get(A,e,t)),set:(A,e,t,o)=>{const n=A[e];return nA(n)&&!nA(t)?(n.value=t,!0):Reflect.set(A,e,t,o)}};function gn(A){return re(A)?A:new Proxy(A,mi)}var En;class Mi{constructor(e,t,o,n){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[En]=!1,this._dirty=!0,this.effect=new zt(e,()=>{this._dirty||(this._dirty=!0,dn(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!n,this.__v_isReadonly=o}get value(){const e=U(this);return hn(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}En="__v_isReadonly";function Ci(A,e,t=!1){let o,n;const s=O(A);s?(o=A,n=process.env.NODE_ENV!=="production"?()=>{console.warn("Write operation failed: computed value is readonly")}:iA):(o=A.get,n=A.set);const i=new Mi(o,n,s||!n,t);return process.env.NODE_ENV!=="production"&&e&&!t&&(i.effect.onTrack=e.onTrack,i.effect.onTrigger=e.onTrigger),i}const le=[];function dt(A){le.push(A)}function gt(){le.pop()}function x(A,...e){if(process.env.NODE_ENV==="production")return;se();const t=le.length?le[le.length-1].component:null,o=t&&t.appContext.config.warnHandler,n=Ii();if(o)jA(o,t,11,[A+e.join(""),t&&t.proxy,n.map(({vnode:s})=>`at <${Dt(t,s.type)}>`).join(`
`),n]);else{const s=[`[Vue warn]: ${A}`,...e];n.length&&s.push(`
`,...xi(n)),console.warn(...s)}ie()}function Ii(){let A=le[le.length-1];if(!A)return[];const e=[];for(;A;){const t=e[0];t&&t.vnode===A?t.recurseCount++:e.push({vnode:A,recurseCount:0});const o=A.component&&A.component.parent;A=o&&o.vnode}return e}function xi(A){const e=[];return A.forEach((t,o)=>{e.push(...o===0?[]:[`
`],...Ni(t))}),e}function Ni({vnode:A,recurseCount:e}){const t=e>0?`... (${e} recursive calls)`:"",o=A.component?A.component.parent==null:!1,n=` at <${Dt(A.component,A.type,o)}`,s=">"+t;return A.props?[n,...wi(A.props),s]:[n+s]}function wi(A){const e=[],t=Object.keys(A);return t.slice(0,3).forEach(o=>{e.push(...mn(o,A[o]))}),t.length>3&&e.push(" ..."),e}function mn(A,e,t){return AA(e)?(e=JSON.stringify(e),t?e:[`${A}=${e}`]):typeof e=="number"||typeof e=="boolean"||e==null?t?e:[`${A}=${e}`]:nA(e)?(e=mn(A,U(e.value),!0),t?e:[`${A}=Ref<`,e,">"]):O(e)?[`${A}=fn${e.name?`<${e.name}>`:""}`]:(e=U(e),t?e:[`${A}=`,e])}const $t={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function jA(A,e,t,o){let n;try{n=o?A(...o):A()}catch(s){Et(s,e,t)}return n}function xA(A,e,t,o){if(O(A)){const s=jA(A,e,t,o);return s&&jt(s)&&s.catch(i=>{Et(i,e,t)}),s}const n=[];for(let s=0;s<A.length;s++)n.push(xA(A[s],e,t,o));return n}function Et(A,e,t,o=!0){const n=e?e.vnode:null;if(e){let s=e.parent;const i=e.proxy,l=process.env.NODE_ENV!=="production"?$t[t]:t;for(;s;){const u=s.ec;if(u){for(let f=0;f<u.length;f++)if(u[f](A,i,l)===!1)return}s=s.parent}const c=e.appContext.config.errorHandler;if(c){jA(c,null,10,[A,i,l]);return}}yi(A,t,n,o)}function yi(A,e,t,o=!0){if(process.env.NODE_ENV!=="production"){const n=$t[e];if(t&&dt(t),x(`Unhandled error${n?` during execution of ${n}`:""}`),t&&gt(),o)throw A;console.error(A)}else console.error(A)}let Ve=!1,Ao=!1;const cA=[];let SA=0;const xe=[];let QA=null,PA=0;const Mn=Promise.resolve();let eo=null;const Gi=100;function Cn(A){const e=eo||Mn;return A?e.then(this?A.bind(this):A):e}function Bi(A){let e=SA+1,t=cA.length;for(;e<t;){const o=e+t>>>1;Je(cA[o])<A?e=o+1:t=o}return e}function mt(A){(!cA.length||!cA.includes(A,Ve&&A.allowRecurse?SA+1:SA))&&(A.id==null?cA.push(A):cA.splice(Bi(A.id),0,A),In())}function In(){!Ve&&!Ao&&(Ao=!0,eo=Mn.then(yn))}function Yi(A){const e=cA.indexOf(A);e>SA&&cA.splice(e,1)}function xn(A){S(A)?xe.push(...A):(!QA||!QA.includes(A,A.allowRecurse?PA+1:PA))&&xe.push(A),In()}function Nn(A,e=Ve?SA+1:0){for(process.env.NODE_ENV!=="production"&&(A=A||new Map);e<cA.length;e++){const t=cA[e];if(t&&t.pre){if(process.env.NODE_ENV!=="production"&&to(A,t))continue;cA.splice(e,1),e--,t()}}}function wn(A){if(xe.length){const e=[...new Set(xe)];if(xe.length=0,QA){QA.push(...e);return}for(QA=e,process.env.NODE_ENV!=="production"&&(A=A||new Map),QA.sort((t,o)=>Je(t)-Je(o)),PA=0;PA<QA.length;PA++)process.env.NODE_ENV!=="production"&&to(A,QA[PA])||QA[PA]();QA=null,PA=0}}const Je=A=>A.id==null?1/0:A.id,Si=(A,e)=>{const t=Je(A)-Je(e);if(t===0){if(A.pre&&!e.pre)return-1;if(e.pre&&!A.pre)return 1}return t};function yn(A){Ao=!1,Ve=!0,process.env.NODE_ENV!=="production"&&(A=A||new Map),cA.sort(Si);const e=process.env.NODE_ENV!=="production"?t=>to(A,t):iA;try{for(SA=0;SA<cA.length;SA++){const t=cA[SA];if(t&&t.active!==!1){if(process.env.NODE_ENV!=="production"&&e(t))continue;jA(t,null,14)}}}finally{SA=0,cA.length=0,wn(A),Ve=!1,eo=null,(cA.length||xe.length)&&yn(A)}}function to(A,e){if(!A.has(e))A.set(e,1);else{const t=A.get(e);if(t>Gi){const o=e.ownerInstance,n=o&&gs(o.type);return x(`Maximum recursive updates exceeded${n?` in component <${n}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`),!0}else A.set(e,t+1)}}let ce=!1;const Ne=new Set;process.env.NODE_ENV!=="production"&&(Wo().__VUE_HMR_RUNTIME__={createRecord:oo(Gn),rerender:oo(Ri),reload:oo(Di)});const ae=new Map;function Qi(A){const e=A.type.__hmrId;let t=ae.get(e);t||(Gn(e,A.type),t=ae.get(e)),t.instances.add(A)}function Oi(A){ae.get(A.type.__hmrId).instances.delete(A)}function Gn(A,e){return ae.has(A)?!1:(ae.set(A,{initialDef:je(e),instances:new Set}),!0)}function je(A){return Es(A)?A.__vccOpts:A}function Ri(A,e){const t=ae.get(A);t&&(t.initialDef.render=e,[...t.instances].forEach(o=>{e&&(o.render=e,je(o.type).render=e),o.renderCache=[],ce=!0,o.update(),ce=!1}))}function Di(A,e){const t=ae.get(A);if(!t)return;e=je(e),Bn(t.initialDef,e);const o=[...t.instances];for(const n of o){const s=je(n.type);Ne.has(s)||(s!==t.initialDef&&Bn(s,e),Ne.add(s)),n.appContext.optionsCache.delete(n.type),n.ceReload?(Ne.add(s),n.ceReload(e.styles),Ne.delete(s)):n.parent?mt(n.parent.update):n.appContext.reload?n.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}xn(()=>{for(const n of o)Ne.delete(je(n.type))})}function Bn(A,e){_(A,e);for(const t in A)t!=="__file"&&!(t in e)&&delete A[t]}function oo(A){return(e,t)=>{try{return A(e,t)}catch(o){console.error(o),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}let OA,Ze=[],no=!1;function Fe(A,...e){OA?OA.emit(A,...e):no||Ze.push({event:A,args:e})}function Yn(A,e){var t,o;OA=A,OA?(OA.enabled=!0,Ze.forEach(({event:n,args:s})=>OA.emit(n,...s)),Ze=[]):typeof window<"u"&&window.HTMLElement&&!(!((o=(t=window.navigator)===null||t===void 0?void 0:t.userAgent)===null||o===void 0)&&o.includes("jsdom"))?((e.__VUE_DEVTOOLS_HOOK_REPLAY__=e.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(s=>{Yn(s,e)}),setTimeout(()=>{OA||(e.__VUE_DEVTOOLS_HOOK_REPLAY__=null,no=!0,Ze=[])},3e3)):(no=!0,Ze=[])}function Ui(A,e){Fe("app:init",A,e,{Fragment:MA,Text:We,Comment:rA,Static:Qt})}function Ki(A){Fe("app:unmount",A)}const ki=so("component:added"),Sn=so("component:updated"),Ti=so("component:removed"),Vi=A=>{OA&&typeof OA.cleanupBuffer=="function"&&!OA.cleanupBuffer(A)&&Ti(A)};function so(A){return e=>{Fe(A,e.appContext.app,e.uid,e.parent?e.parent.uid:void 0,e)}}const Ji=Qn("perf:start"),ji=Qn("perf:end");function Qn(A){return(e,t,o)=>{Fe(A,e.appContext.app,e.uid,e,t,o)}}function Zi(A,e,t){Fe("component:emit",A.appContext.app,A,e,t)}function Fi(A,e,...t){if(A.isUnmounted)return;const o=A.vnode.props||q;if(process.env.NODE_ENV!=="production"){const{emitsOptions:f,propsOptions:[p]}=A;if(f)if(!(e in f))(!p||!(oe(e)in p))&&x(`Component emitted event "${e}" but it is neither declared in the emits option nor as an "${oe(e)}" prop.`);else{const E=f[e];O(E)&&(E(...t)||x(`Invalid event arguments: event validation failed for event "${e}".`))}}let n=t;const s=e.startsWith("update:"),i=s&&e.slice(7);if(i&&i in o){const f=`${i==="modelValue"?"model":i}Modifiers`,{number:p,trim:E}=o[f]||q;E&&(n=t.map(y=>AA(y)?y.trim():y)),p&&(n=t.map(nt))}if(process.env.NODE_ENV!=="production"&&Zi(A,e,n),process.env.NODE_ENV!=="production"){const f=e.toLowerCase();f!==e&&o[oe(f)]&&x(`Event "${f}" is emitted in component ${Dt(A,A.type)} but the handler is registered for "${e}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${EA(e)}" instead of "${e}".`)}let l,c=o[l=oe(e)]||o[l=oe(VA(e))];!c&&s&&(c=o[l=oe(EA(e))]),c&&xA(c,A,6,n);const u=o[l+"Once"];if(u){if(!A.emitted)A.emitted={};else if(A.emitted[l])return;A.emitted[l]=!0,xA(u,A,6,n)}}function On(A,e,t=!1){const o=e.emitsCache,n=o.get(A);if(n!==void 0)return n;const s=A.emits;let i={},l=!1;if(!O(A)){const c=u=>{const f=On(u,e,!0);f&&(l=!0,_(i,f))};!t&&e.mixins.length&&e.mixins.forEach(c),A.extends&&c(A.extends),A.mixins&&A.mixins.forEach(c)}return!s&&!l?(F(A)&&o.set(A,null),null):(S(s)?s.forEach(c=>i[c]=null):_(i,s),F(A)&&o.set(A,i),i)}function Mt(A,e){return!A||!Oe(e)?!1:(e=e.slice(2).replace(/Once$/,""),K(A,e[0].toLowerCase()+e.slice(1))||K(A,EA(e))||K(A,e))}let mA=null,Ct=null;function It(A){const e=mA;return mA=A,Ct=A&&A.type.__scopeId||null,e}function bi(A){Ct=A}function qi(){Ct=null}function Wi(A,e=mA,t){if(!e||A._n)return A;const o=(...n)=>{o._d&&rs(-1);const s=It(e);let i;try{i=A(...n)}finally{It(s),o._d&&rs(1)}return process.env.NODE_ENV!=="production"&&Sn(e),i};return o._n=!0,o._c=!0,o._d=!0,o}let io=!1;function xt(){io=!0}function ro(A){const{type:e,vnode:t,proxy:o,withProxy:n,props:s,propsOptions:[i],slots:l,attrs:c,emit:u,render:f,renderCache:p,data:E,setupState:y,ctx:D,inheritAttrs:B}=A;let J,eA;const $=It(A);process.env.NODE_ENV!=="production"&&(io=!1);try{if(t.shapeFlag&4){const L=n||o;J=GA(f.call(L,L,p,s,y,E,D)),eA=c}else{const L=e;process.env.NODE_ENV!=="production"&&c===s&&xt(),J=GA(L.length>1?L(s,process.env.NODE_ENV!=="production"?{get attrs(){return xt(),c},slots:l,emit:u}:{attrs:c,slots:l,emit:u}):L(s,null)),eA=e.props?c:zi(c)}}catch(L){Le.length=0,Et(L,A,1),J=CA(rA)}let v=J,k;if(process.env.NODE_ENV!=="production"&&J.patchFlag>0&&J.patchFlag&2048&&([v,k]=Li(J)),eA&&B!==!1){const L=Object.keys(eA),{shapeFlag:UA}=v;if(L.length){if(UA&7)i&&L.some(_e)&&(eA=Hi(eA,i)),v=RA(v,eA);else if(process.env.NODE_ENV!=="production"&&!io&&v.type!==rA){const KA=Object.keys(c),T=[],H=[];for(let P=0,aA=KA.length;P<aA;P++){const lA=KA[P];Oe(lA)?_e(lA)||T.push(lA[2].toLowerCase()+lA.slice(3)):H.push(lA)}H.length&&x(`Extraneous non-props attributes (${H.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`),T.length&&x(`Extraneous non-emits event listeners (${T.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.`)}}}return t.dirs&&(process.env.NODE_ENV!=="production"&&!Dn(v)&&x("Runtime directive used on component with non-element root node. The directives will not function as intended."),v=RA(v),v.dirs=v.dirs?v.dirs.concat(t.dirs):t.dirs),t.transition&&(process.env.NODE_ENV!=="production"&&!Dn(v)&&x("Component inside <Transition> renders non-element root node that cannot be animated."),v.transition=t.transition),process.env.NODE_ENV!=="production"&&k?k(v):J=v,It($),J}const Li=A=>{const e=A.children,t=A.dynamicChildren,o=Rn(e);if(!o)return[A,void 0];const n=e.indexOf(o),s=t?t.indexOf(o):-1,i=l=>{e[n]=l,t&&(s>-1?t[s]=l:l.patchFlag>0&&(A.dynamicChildren=[...t,l]))};return[GA(o),i]};function Rn(A){let e;for(let t=0;t<A.length;t++){const o=A[t];if(wo(o)){if(o.type!==rA||o.children==="v-if"){if(e)return;e=o}}else return}return e}const zi=A=>{let e;for(const t in A)(t==="class"||t==="style"||Oe(t))&&((e||(e={}))[t]=A[t]);return e},Hi=(A,e)=>{const t={};for(const o in A)(!_e(o)||!(o.slice(9)in e))&&(t[o]=A[o]);return t},Dn=A=>A.shapeFlag&7||A.type===rA;function vi(A,e,t){const{props:o,children:n,component:s}=A,{props:i,children:l,patchFlag:c}=e,u=s.emitsOptions;if(process.env.NODE_ENV!=="production"&&(n||l)&&ce||e.dirs||e.transition)return!0;if(t&&c>=0){if(c&1024)return!0;if(c&16)return o?Un(o,i,u):!!i;if(c&8){const f=e.dynamicProps;for(let p=0;p<f.length;p++){const E=f[p];if(i[E]!==o[E]&&!Mt(u,E))return!0}}}else return(n||l)&&(!l||!l.$stable)?!0:o===i?!1:o?i?Un(o,i,u):!0:!!i;return!1}function Un(A,e,t){const o=Object.keys(e);if(o.length!==Object.keys(A).length)return!0;for(let n=0;n<o.length;n++){const s=o[n];if(e[s]!==A[s]&&!Mt(t,s))return!0}return!1}function Xi({vnode:A,parent:e},t){for(;e&&e.subTree===A;)(A=e.vnode).el=t,e=e.parent}const Pi=A=>A.__isSuspense;function _i(A,e){e&&e.pendingBranch?S(A)?e.effects.push(...A):e.effects.push(A):xn(A)}function $i(A,e){if(!sA)process.env.NODE_ENV!=="production"&&x("provide() can only be used inside setup().");else{let t=sA.provides;const o=sA.parent&&sA.parent.provides;o===t&&(t=sA.provides=Object.create(o)),t[A]=e}}function Nt(A,e,t=!1){const o=sA||mA;if(o){const n=o.parent==null?o.vnode.appContext&&o.vnode.appContext.provides:o.parent.provides;if(n&&A in n)return n[A];if(arguments.length>1)return t&&O(e)?e.call(o.proxy):e;process.env.NODE_ENV!=="production"&&x(`injection "${String(A)}" not found.`)}else process.env.NODE_ENV!=="production"&&x("inject() can only be used inside setup() or functional components.")}const wt={};function lo(A,e,t){return process.env.NODE_ENV!=="production"&&!O(e)&&x("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),Kn(A,e,t)}function Kn(A,e,{immediate:t,deep:o,flush:n,onTrack:s,onTrigger:i}=q){process.env.NODE_ENV!=="production"&&!e&&(t!==void 0&&x('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),o!==void 0&&x('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));const l=k=>{x("Invalid watch source: ",k,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},c=sA;let u,f=!1,p=!1;if(nA(A)?(u=()=>A.value,f=ht(A)):re(A)?(u=()=>A,o=!0):S(A)?(p=!0,f=A.some(k=>re(k)||ht(k)),u=()=>A.map(k=>{if(nA(k))return k.value;if(re(k))return we(k);if(O(k))return jA(k,c,2);process.env.NODE_ENV!=="production"&&l(k)})):O(A)?e?u=()=>jA(A,c,2):u=()=>{if(!(c&&c.isUnmounted))return E&&E(),xA(A,c,3,[y])}:(u=iA,process.env.NODE_ENV!=="production"&&l(A)),e&&o){const k=u;u=()=>we(k())}let E,y=k=>{E=$.onStop=()=>{jA(k,c,4)}},D;if(He)if(y=iA,e?t&&xA(e,c,3,[u(),p?[]:void 0,y]):u(),n==="sync"){const k=rl();D=k.__watcherHandles||(k.__watcherHandles=[])}else return iA;let B=p?new Array(A.length).fill(wt):wt;const J=()=>{if($.active)if(e){const k=$.run();(o||f||(p?k.some((L,UA)=>Re(L,B[UA])):Re(k,B)))&&(E&&E(),xA(e,c,3,[k,B===wt?void 0:p&&B[0]===wt?[]:B,y]),B=k)}else $.run()};J.allowRecurse=!!e;let eA;n==="sync"?eA=J:n==="post"?eA=()=>dA(J,c&&c.suspense):(J.pre=!0,c&&(J.id=c.uid),eA=()=>mt(J));const $=new zt(u,eA);process.env.NODE_ENV!=="production"&&($.onTrack=s,$.onTrigger=i),e?t?J():B=$.run():n==="post"?dA($.run.bind($),c&&c.suspense):$.run();const v=()=>{$.stop(),c&&c.scope&&Vt(c.scope.effects,$)};return D&&D.push(v),v}function Ar(A,e,t){const o=this.proxy,n=AA(A)?A.includes(".")?kn(o,A):()=>o[A]:A.bind(o,o);let s;O(e)?s=e:(s=e.handler,t=e);const i=sA;Ge(this);const l=Kn(n,s.bind(o),t);return i?Ge(i):Ee(),l}function kn(A,e){const t=e.split(".");return()=>{let o=A;for(let n=0;n<t.length&&o;n++)o=o[t[n]];return o}}function we(A,e){if(!F(A)||A.__v_skip||(e=e||new Set,e.has(A)))return A;if(e.add(A),nA(A))we(A.value,e);else if(S(A))for(let t=0;t<A.length;t++)we(A[t],e);else if(Zo(A)||te(A))A.forEach(t=>{we(t,e)});else if(bo(A))for(const t in A)we(A[t],e);return A}function er(){const A={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Zn(()=>{A.isMounted=!0}),Fn(()=>{A.isUnmounting=!0}),A}const NA=[Function,Array],tr={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:NA,onEnter:NA,onAfterEnter:NA,onEnterCancelled:NA,onBeforeLeave:NA,onLeave:NA,onAfterLeave:NA,onLeaveCancelled:NA,onBeforeAppear:NA,onAppear:NA,onAfterAppear:NA,onAppearCancelled:NA},setup(A,{slots:e}){const t=Pr(),o=er();let n;return()=>{const s=e.default&&Jn(e.default(),!0);if(!s||!s.length)return;let i=s[0];if(s.length>1){let B=!1;for(const J of s)if(J.type!==rA){if(process.env.NODE_ENV!=="production"&&B){x("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}if(i=J,B=!0,process.env.NODE_ENV==="production")break}}const l=U(A),{mode:c}=l;if(process.env.NODE_ENV!=="production"&&c&&c!=="in-out"&&c!=="out-in"&&c!=="default"&&x(`invalid <transition> mode: ${c}`),o.isLeaving)return ao(i);const u=Vn(i);if(!u)return ao(i);const f=co(u,l,o,t);uo(u,f);const p=t.subTree,E=p&&Vn(p);let y=!1;const{getTransitionKey:D}=u.type;if(D){const B=D();n===void 0?n=B:B!==n&&(n=B,y=!0)}if(E&&E.type!==rA&&(!ge(u,E)||y)){const B=co(E,l,o,t);if(uo(E,B),c==="out-in")return o.isLeaving=!0,B.afterLeave=()=>{o.isLeaving=!1,t.update.active!==!1&&t.update()},ao(i);c==="in-out"&&u.type!==rA&&(B.delayLeave=(J,eA,$)=>{const v=Tn(o,E);v[String(E.key)]=E,J._leaveCb=()=>{eA(),J._leaveCb=void 0,delete f.delayedLeave},f.delayedLeave=$})}return i}}};function Tn(A,e){const{leavingVNodes:t}=A;let o=t.get(e.type);return o||(o=Object.create(null),t.set(e.type,o)),o}function co(A,e,t,o){const{appear:n,mode:s,persisted:i=!1,onBeforeEnter:l,onEnter:c,onAfterEnter:u,onEnterCancelled:f,onBeforeLeave:p,onLeave:E,onAfterLeave:y,onLeaveCancelled:D,onBeforeAppear:B,onAppear:J,onAfterAppear:eA,onAppearCancelled:$}=e,v=String(A.key),k=Tn(t,A),L=(T,H)=>{T&&xA(T,o,9,H)},UA=(T,H)=>{const P=H[1];L(T,H),S(T)?T.every(aA=>aA.length<=1)&&P():T.length<=1&&P()},KA={mode:s,persisted:i,beforeEnter(T){let H=l;if(!t.isMounted)if(n)H=B||l;else return;T._leaveCb&&T._leaveCb(!0);const P=k[v];P&&ge(A,P)&&P.el._leaveCb&&P.el._leaveCb(),L(H,[T])},enter(T){let H=c,P=u,aA=f;if(!t.isMounted)if(n)H=J||c,P=eA||u,aA=$||f;else return;let lA=!1;const WA=T._enterCb=Kt=>{lA||(lA=!0,Kt?L(aA,[T]):L(P,[T]),KA.delayedLeave&&KA.delayedLeave(),T._enterCb=void 0)};H?UA(H,[T,WA]):WA()},leave(T,H){const P=String(A.key);if(T._enterCb&&T._enterCb(!0),t.isUnmounting)return H();L(p,[T]);let aA=!1;const lA=T._leaveCb=WA=>{aA||(aA=!0,H(),WA?L(D,[T]):L(y,[T]),T._leaveCb=void 0,k[P]===A&&delete k[P])};k[P]=A,E?UA(E,[T,lA]):lA()},clone(T){return co(T,e,t,o)}};return KA}function ao(A){if(be(A))return A=RA(A),A.children=null,A}function Vn(A){return be(A)?A.children?A.children[0]:void 0:A}function uo(A,e){A.shapeFlag&6&&A.component?uo(A.component.subTree,e):A.shapeFlag&128?(A.ssContent.transition=e.clone(A.ssContent),A.ssFallback.transition=e.clone(A.ssFallback)):A.transition=e}function Jn(A,e=!1,t){let o=[],n=0;for(let s=0;s<A.length;s++){let i=A[s];const l=t==null?i.key:String(t)+String(i.key!=null?i.key:s);i.type===MA?(i.patchFlag&128&&n++,o=o.concat(Jn(i.children,e,l))):(e||i.type!==rA)&&o.push(l!=null?RA(i,{key:l}):i)}if(n>1)for(let s=0;s<o.length;s++)o[s].patchFlag=-2;return o}function ue(A){return O(A)?{setup:A,name:A.name}:A}const yt=A=>!!A.type.__asyncLoader,be=A=>A.type.__isKeepAlive;function or(A,e){jn(A,"a",e)}function nr(A,e){jn(A,"da",e)}function jn(A,e,t=sA){const o=A.__wdc||(A.__wdc=()=>{let n=t;for(;n;){if(n.isDeactivated)return;n=n.parent}return A()});if(Gt(e,o,t),t){let n=t.parent;for(;n&&n.parent;)be(n.parent.vnode)&&sr(o,e,t,n),n=n.parent}}function sr(A,e,t,o){const n=Gt(e,A,o,!0);bn(()=>{Vt(o[e],n)},t)}function Gt(A,e,t=sA,o=!1){if(t){const n=t[A]||(t[A]=[]),s=e.__weh||(e.__weh=(...i)=>{if(t.isUnmounted)return;se(),Ge(t);const l=xA(e,t,A,i);return Ee(),ie(),l});return o?n.unshift(s):n.push(s),s}else if(process.env.NODE_ENV!=="production"){const n=oe($t[A].replace(/ hook$/,""));x(`${n} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`)}}const ZA=A=>(e,t=sA)=>(!He||A==="sp")&&Gt(A,(...o)=>e(...o),t),ir=ZA("bm"),Zn=ZA("m"),rr=ZA("bu"),lr=ZA("u"),Fn=ZA("bum"),bn=ZA("um"),cr=ZA("sp"),ar=ZA("rtg"),ur=ZA("rtc");function pr(A,e=sA){Gt("ec",A,e)}function qn(A){Vs(A)&&x("Do not use built-in directive ids as custom directive id: "+A)}function pe(A,e,t,o){const n=A.dirs,s=e&&e.dirs;for(let i=0;i<n.length;i++){const l=n[i];s&&(l.oldValue=s[i].value);let c=l.dir[o];c&&(se(),xA(c,t,8,[A.el,l,A,e]),ie())}}const fr=Symbol();function hr(A,e,t,o){let n;const s=t&&t[o];if(S(A)||AA(A)){n=new Array(A.length);for(let i=0,l=A.length;i<l;i++)n[i]=e(A[i],i,void 0,s&&s[i])}else if(typeof A=="number"){process.env.NODE_ENV!=="production"&&!Number.isInteger(A)&&x(`The v-for range expect an integer value but got ${A}.`),n=new Array(A);for(let i=0;i<A;i++)n[i]=e(i+1,i,void 0,s&&s[i])}else if(F(A))if(A[Symbol.iterator])n=Array.from(A,(i,l)=>e(i,l,void 0,s&&s[l]));else{const i=Object.keys(A);n=new Array(i.length);for(let l=0,c=i.length;l<c;l++){const u=i[l];n[l]=e(A[u],u,l,s&&s[l])}}else n=[];return t&&(t[o]=n),n}const po=A=>A?ps(A)?Yo(A)||A.proxy:po(A.parent):null,fe=_(Object.create(null),{$:A=>A,$el:A=>A.vnode.el,$data:A=>A.data,$props:A=>process.env.NODE_ENV!=="production"?Ie(A.props):A.props,$attrs:A=>process.env.NODE_ENV!=="production"?Ie(A.attrs):A.attrs,$slots:A=>process.env.NODE_ENV!=="production"?Ie(A.slots):A.slots,$refs:A=>process.env.NODE_ENV!=="production"?Ie(A.refs):A.refs,$parent:A=>po(A.parent),$root:A=>po(A.root),$emit:A=>A.emit,$options:A=>Eo(A),$forceUpdate:A=>A.f||(A.f=()=>mt(A.update)),$nextTick:A=>A.n||(A.n=Cn.bind(A.proxy)),$watch:A=>Ar.bind(A)}),fo=A=>A==="_"||A==="$",ho=(A,e)=>A!==q&&!A.__isScriptSetup&&K(A,e),Wn={get({_:A},e){const{ctx:t,setupState:o,data:n,props:s,accessCache:i,type:l,appContext:c}=A;if(process.env.NODE_ENV!=="production"&&e==="__isVue")return!0;let u;if(e[0]!=="$"){const y=i[e];if(y!==void 0)switch(y){case 1:return o[e];case 2:return n[e];case 4:return t[e];case 3:return s[e]}else{if(ho(o,e))return i[e]=1,o[e];if(n!==q&&K(n,e))return i[e]=2,n[e];if((u=A.propsOptions[0])&&K(u,e))return i[e]=3,s[e];if(t!==q&&K(t,e))return i[e]=4,t[e];go&&(i[e]=0)}}const f=fe[e];let p,E;if(f)return e==="$attrs"&&(hA(A,"get",e),process.env.NODE_ENV!=="production"&&xt()),f(A);if((p=l.__cssModules)&&(p=p[e]))return p;if(t!==q&&K(t,e))return i[e]=4,t[e];if(E=c.config.globalProperties,K(E,e))return E[e];process.env.NODE_ENV!=="production"&&mA&&(!AA(e)||e.indexOf("__v")!==0)&&(n!==q&&fo(e[0])&&K(n,e)?x(`Property ${JSON.stringify(e)} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`):A===mA&&x(`Property ${JSON.stringify(e)} was accessed during render but is not defined on instance.`))},set({_:A},e,t){const{data:o,setupState:n,ctx:s}=A;return ho(n,e)?(n[e]=t,!0):process.env.NODE_ENV!=="production"&&n.__isScriptSetup&&K(n,e)?(x(`Cannot mutate <script setup> binding "${e}" from Options API.`),!1):o!==q&&K(o,e)?(o[e]=t,!0):K(A.props,e)?(process.env.NODE_ENV!=="production"&&x(`Attempting to mutate prop "${e}". Props are readonly.`),!1):e[0]==="$"&&e.slice(1)in A?(process.env.NODE_ENV!=="production"&&x(`Attempting to mutate public property "${e}". Properties starting with $ are reserved and readonly.`),!1):(process.env.NODE_ENV!=="production"&&e in A.appContext.config.globalProperties?Object.defineProperty(s,e,{enumerable:!0,configurable:!0,value:t}):s[e]=t,!0)},has({_:{data:A,setupState:e,accessCache:t,ctx:o,appContext:n,propsOptions:s}},i){let l;return!!t[i]||A!==q&&K(A,i)||ho(e,i)||(l=s[0])&&K(l,i)||K(o,i)||K(fe,i)||K(n.config.globalProperties,i)},defineProperty(A,e,t){return t.get!=null?A._.accessCache[e]=0:K(t,"value")&&this.set(A,e,t.value,null),Reflect.defineProperty(A,e,t)}};process.env.NODE_ENV!=="production"&&(Wn.ownKeys=A=>(x("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(A)));function dr(A){const e={};return Object.defineProperty(e,"_",{configurable:!0,enumerable:!1,get:()=>A}),Object.keys(fe).forEach(t=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,get:()=>fe[t](A),set:iA})}),e}function gr(A){const{ctx:e,propsOptions:[t]}=A;t&&Object.keys(t).forEach(o=>{Object.defineProperty(e,o,{enumerable:!0,configurable:!0,get:()=>A.props[o],set:iA})})}function Er(A){const{ctx:e,setupState:t}=A;Object.keys(U(t)).forEach(o=>{if(!t.__isScriptSetup){if(fo(o[0])){x(`setup() return property ${JSON.stringify(o)} should not start with "$" or "_" which are reserved prefixes for Vue internals.`);return}Object.defineProperty(e,o,{enumerable:!0,configurable:!0,get:()=>t[o],set:iA})}})}function mr(){const A=Object.create(null);return(e,t)=>{A[t]?x(`${e} property "${t}" is already defined in ${A[t]}.`):A[t]=e}}let go=!0;function Mr(A){const e=Eo(A),t=A.proxy,o=A.ctx;go=!1,e.beforeCreate&&Ln(e.beforeCreate,A,"bc");const{data:n,computed:s,methods:i,watch:l,provide:c,inject:u,created:f,beforeMount:p,mounted:E,beforeUpdate:y,updated:D,activated:B,deactivated:J,beforeDestroy:eA,beforeUnmount:$,destroyed:v,unmounted:k,render:L,renderTracked:UA,renderTriggered:KA,errorCaptured:T,serverPrefetch:H,expose:P,inheritAttrs:aA,components:lA,directives:WA,filters:Kt}=e,Ae=process.env.NODE_ENV!=="production"?mr():null;if(process.env.NODE_ENV!=="production"){const[j]=A.propsOptions;if(j)for(const Z in j)Ae("Props",Z)}if(u&&Cr(u,o,Ae,A.appContext.config.unwrapInjectedRef),i)for(const j in i){const Z=i[j];O(Z)?(process.env.NODE_ENV!=="production"?Object.defineProperty(o,j,{value:Z.bind(t),configurable:!0,enumerable:!0,writable:!0}):o[j]=Z.bind(t),process.env.NODE_ENV!=="production"&&Ae("Methods",j)):process.env.NODE_ENV!=="production"&&x(`Method "${j}" has type "${typeof Z}" in the component definition. Did you reference the function correctly?`)}if(n){process.env.NODE_ENV!=="production"&&!O(n)&&x("The data option must be a function. Plain object usage is no longer supported.");const j=n.call(t,t);if(process.env.NODE_ENV!=="production"&&jt(j)&&x("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!F(j))process.env.NODE_ENV!=="production"&&x("data() should return an object.");else if(A.data=Xt(j),process.env.NODE_ENV!=="production")for(const Z in j)Ae("Data",Z),fo(Z[0])||Object.defineProperty(o,Z,{configurable:!0,enumerable:!0,get:()=>j[Z],set:iA})}if(go=!0,s)for(const j in s){const Z=s[j],kA=O(Z)?Z.bind(t,t):O(Z.get)?Z.get.bind(t,t):iA;process.env.NODE_ENV!=="production"&&kA===iA&&x(`Computed property "${j}" has no getter.`);const Uo=!O(Z)&&O(Z.set)?Z.set.bind(t):process.env.NODE_ENV!=="production"?()=>{x(`Write operation failed: computed property "${j}" is readonly.`)}:iA,ve=sl({get:kA,set:Uo});Object.defineProperty(o,j,{enumerable:!0,configurable:!0,get:()=>ve.value,set:Be=>ve.value=Be}),process.env.NODE_ENV!=="production"&&Ae("Computed",j)}if(l)for(const j in l)zn(l[j],o,t,j);if(c){const j=O(c)?c.call(t):c;Reflect.ownKeys(j).forEach(Z=>{$i(Z,j[Z])})}f&&Ln(f,A,"c");function gA(j,Z){S(Z)?Z.forEach(kA=>j(kA.bind(t))):Z&&j(Z.bind(t))}if(gA(ir,p),gA(Zn,E),gA(rr,y),gA(lr,D),gA(or,B),gA(nr,J),gA(pr,T),gA(ur,UA),gA(ar,KA),gA(Fn,$),gA(bn,k),gA(cr,H),S(P))if(P.length){const j=A.exposed||(A.exposed={});P.forEach(Z=>{Object.defineProperty(j,Z,{get:()=>t[Z],set:kA=>t[Z]=kA})})}else A.exposed||(A.exposed={});L&&A.render===iA&&(A.render=L),aA!=null&&(A.inheritAttrs=aA),lA&&(A.components=lA),WA&&(A.directives=WA)}function Cr(A,e,t=iA,o=!1){S(A)&&(A=mo(A));for(const n in A){const s=A[n];let i;F(s)?"default"in s?i=Nt(s.from||n,s.default,!0):i=Nt(s.from||n):i=Nt(s),nA(i)?o?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>i.value,set:l=>i.value=l}):(process.env.NODE_ENV!=="production"&&x(`injected property "${n}" is a ref and will be auto-unwrapped and no longer needs \`.value\` in the next minor release. To opt-in to the new behavior now, set \`app.config.unwrapInjectedRef = true\` (this config is temporary and will not be needed in the future.)`),e[n]=i):e[n]=i,process.env.NODE_ENV!=="production"&&t("Inject",n)}}function Ln(A,e,t){xA(S(A)?A.map(o=>o.bind(e.proxy)):A.bind(e.proxy),e,t)}function zn(A,e,t,o){const n=o.includes(".")?kn(t,o):()=>t[o];if(AA(A)){const s=e[A];O(s)?lo(n,s):process.env.NODE_ENV!=="production"&&x(`Invalid watch handler specified by key "${A}"`,s)}else if(O(A))lo(n,A.bind(t));else if(F(A))if(S(A))A.forEach(s=>zn(s,e,t,o));else{const s=O(A.handler)?A.handler.bind(t):e[A.handler];O(s)?lo(n,s,A):process.env.NODE_ENV!=="production"&&x(`Invalid watch handler specified by key "${A.handler}"`,s)}else process.env.NODE_ENV!=="production"&&x(`Invalid watch option: "${o}"`,A)}function Eo(A){const e=A.type,{mixins:t,extends:o}=e,{mixins:n,optionsCache:s,config:{optionMergeStrategies:i}}=A.appContext,l=s.get(e);let c;return l?c=l:!n.length&&!t&&!o?c=e:(c={},n.length&&n.forEach(u=>Bt(c,u,i,!0)),Bt(c,e,i)),F(e)&&s.set(e,c),c}function Bt(A,e,t,o=!1){const{mixins:n,extends:s}=e;s&&Bt(A,s,t,!0),n&&n.forEach(i=>Bt(A,i,t,!0));for(const i in e)if(o&&i==="expose")process.env.NODE_ENV!=="production"&&x('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{const l=Ir[i]||t&&t[i];A[i]=l?l(A[i],e[i]):e[i]}return A}const Ir={data:Hn,props:he,emits:he,methods:he,computed:he,beforeCreate:pA,created:pA,beforeMount:pA,mounted:pA,beforeUpdate:pA,updated:pA,beforeDestroy:pA,beforeUnmount:pA,destroyed:pA,unmounted:pA,activated:pA,deactivated:pA,errorCaptured:pA,serverPrefetch:pA,components:he,directives:he,watch:Nr,provide:Hn,inject:xr};function Hn(A,e){return e?A?function(){return _(O(A)?A.call(this,this):A,O(e)?e.call(this,this):e)}:e:A}function xr(A,e){return he(mo(A),mo(e))}function mo(A){if(S(A)){const e={};for(let t=0;t<A.length;t++)e[A[t]]=A[t];return e}return A}function pA(A,e){return A?[...new Set([].concat(A,e))]:e}function he(A,e){return A?_(_(Object.create(null),A),e):e}function Nr(A,e){if(!A)return e;if(!e)return A;const t=_(Object.create(null),A);for(const o in e)t[o]=pA(A[o],e[o]);return t}function wr(A,e,t,o=!1){const n={},s={};ot(s,Ot,1),A.propsDefaults=Object.create(null),vn(A,e,n,s);for(const i in A.propsOptions[0])i in n||(n[i]=void 0);process.env.NODE_ENV!=="production"&&As(e||{},n,A),t?A.props=o?n:di(n):A.type.props?A.props=n:A.props=s,A.attrs=s}function yr(A){for(;A;){if(A.type.__hmrId)return!0;A=A.parent}}function Gr(A,e,t,o){const{props:n,attrs:s,vnode:{patchFlag:i}}=A,l=U(n),[c]=A.propsOptions;let u=!1;if(!(process.env.NODE_ENV!=="production"&&yr(A))&&(o||i>0)&&!(i&16)){if(i&8){const f=A.vnode.dynamicProps;for(let p=0;p<f.length;p++){let E=f[p];if(Mt(A.emitsOptions,E))continue;const y=e[E];if(c)if(K(s,E))y!==s[E]&&(s[E]=y,u=!0);else{const D=VA(E);n[D]=Mo(c,l,D,y,A,!1)}else y!==s[E]&&(s[E]=y,u=!0)}}}else{vn(A,e,n,s)&&(u=!0);let f;for(const p in l)(!e||!K(e,p)&&((f=EA(p))===p||!K(e,f)))&&(c?t&&(t[p]!==void 0||t[f]!==void 0)&&(n[p]=Mo(c,l,p,void 0,A,!0)):delete n[p]);if(s!==l)for(const p in s)(!e||!K(e,p))&&(delete s[p],u=!0)}u&&JA(A,"set","$attrs"),process.env.NODE_ENV!=="production"&&As(e||{},n,A)}function vn(A,e,t,o){const[n,s]=A.propsOptions;let i=!1,l;if(e)for(let c in e){if(At(c))continue;const u=e[c];let f;n&&K(n,f=VA(c))?!s||!s.includes(f)?t[f]=u:(l||(l={}))[f]=u:Mt(A.emitsOptions,c)||(!(c in o)||u!==o[c])&&(o[c]=u,i=!0)}if(s){const c=U(t),u=l||q;for(let f=0;f<s.length;f++){const p=s[f];t[p]=Mo(n,c,p,u[p],A,!K(u,p))}}return i}function Mo(A,e,t,o,n,s){const i=A[t];if(i!=null){const l=K(i,"default");if(l&&o===void 0){const c=i.default;if(i.type!==Function&&O(c)){const{propsDefaults:u}=n;t in u?o=u[t]:(Ge(n),o=u[t]=c.call(null,e),Ee())}else o=c}i[0]&&(s&&!l?o=!1:i[1]&&(o===""||o===EA(t))&&(o=!0))}return o}function Xn(A,e,t=!1){const o=e.propsCache,n=o.get(A);if(n)return n;const s=A.props,i={},l=[];let c=!1;if(!O(A)){const f=p=>{c=!0;const[E,y]=Xn(p,e,!0);_(i,E),y&&l.push(...y)};!t&&e.mixins.length&&e.mixins.forEach(f),A.extends&&f(A.extends),A.mixins&&A.mixins.forEach(f)}if(!s&&!c)return F(A)&&o.set(A,Me),Me;if(S(s))for(let f=0;f<s.length;f++){process.env.NODE_ENV!=="production"&&!AA(s[f])&&x("props must be strings when using array syntax.",s[f]);const p=VA(s[f]);Pn(p)&&(i[p]=q)}else if(s){process.env.NODE_ENV!=="production"&&!F(s)&&x("invalid props options",s);for(const f in s){const p=VA(f);if(Pn(p)){const E=s[f],y=i[p]=S(E)||O(E)?{type:E}:Object.assign({},E);if(y){const D=$n(Boolean,y.type),B=$n(String,y.type);y[0]=D>-1,y[1]=B<0||D<B,(D>-1||K(y,"default"))&&l.push(p)}}}}const u=[i,l];return F(A)&&o.set(A,u),u}function Pn(A){return A[0]!=="$"?!0:(process.env.NODE_ENV!=="production"&&x(`Invalid prop name: "${A}" is a reserved property.`),!1)}function Co(A){const e=A&&A.toString().match(/^\s*function (\w+)/);return e?e[1]:A===null?"null":""}function _n(A,e){return Co(A)===Co(e)}function $n(A,e){return S(e)?e.findIndex(t=>_n(t,A)):O(e)&&_n(e,A)?0:-1}function As(A,e,t){const o=U(e),n=t.propsOptions[0];for(const s in n){let i=n[s];i!=null&&Br(s,o[s],i,!K(A,s)&&!K(A,EA(s)))}}function Br(A,e,t,o){const{type:n,required:s,validator:i}=t;if(s&&o){x('Missing required prop: "'+A+'"');return}if(!(e==null&&!t.required)){if(n!=null&&n!==!0){let l=!1;const c=S(n)?n:[n],u=[];for(let f=0;f<c.length&&!l;f++){const{valid:p,expectedType:E}=Sr(e,c[f]);u.push(E||""),l=p}if(!l){x(Qr(A,e,u));return}}i&&!i(e)&&x('Invalid prop: custom validator check failed for prop "'+A+'".')}}const Yr=oA("String,Number,Boolean,Function,Symbol,BigInt");function Sr(A,e){let t;const o=Co(e);if(Yr(o)){const n=typeof A;t=n===o.toLowerCase(),!t&&n==="object"&&(t=A instanceof e)}else o==="Object"?t=F(A):o==="Array"?t=S(A):o==="null"?t=A===null:t=A instanceof e;return{valid:t,expectedType:o}}function Qr(A,e,t){let o=`Invalid prop: type check failed for prop "${A}". Expected ${t.map(tt).join(" | ")}`;const n=t[0],s=Zt(e),i=es(e,n),l=es(e,s);return t.length===1&&ts(n)&&!Or(n,s)&&(o+=` with value ${i}`),o+=`, got ${s} `,ts(s)&&(o+=`with value ${l}.`),o}function es(A,e){return e==="String"?`"${A}"`:e==="Number"?`${Number(A)}`:`${A}`}function ts(A){return["string","number","boolean"].some(t=>A.toLowerCase()===t)}function Or(...A){return A.some(e=>e.toLowerCase()==="boolean")}const os=A=>A[0]==="_"||A==="$stable",Io=A=>S(A)?A.map(GA):[GA(A)],Rr=(A,e,t)=>{if(e._n)return e;const o=Wi((...n)=>(process.env.NODE_ENV!=="production"&&sA&&x(`Slot "${A}" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`),Io(e(...n))),t);return o._c=!1,o},ns=(A,e,t)=>{const o=A._ctx;for(const n in A){if(os(n))continue;const s=A[n];if(O(s))e[n]=Rr(n,s,o);else if(s!=null){process.env.NODE_ENV!=="production"&&x(`Non-function value encountered for slot "${n}". Prefer function slots for better performance.`);const i=Io(s);e[n]=()=>i}}},ss=(A,e)=>{process.env.NODE_ENV!=="production"&&!be(A.vnode)&&x("Non-function value encountered for default slot. Prefer function slots for better performance.");const t=Io(e);A.slots.default=()=>t},Dr=(A,e)=>{if(A.vnode.shapeFlag&32){const t=e._;t?(A.slots=U(e),ot(e,"_",t)):ns(e,A.slots={})}else A.slots={},e&&ss(A,e);ot(A.slots,Ot,1)},Ur=(A,e,t)=>{const{vnode:o,slots:n}=A;let s=!0,i=q;if(o.shapeFlag&32){const l=e._;l?process.env.NODE_ENV!=="production"&&ce?_(n,e):t&&l===1?s=!1:(_(n,e),!t&&l===1&&delete n._):(s=!e.$stable,ns(e,n)),i=e}else e&&(ss(A,e),i={default:1});if(s)for(const l in n)!os(l)&&!(l in i)&&delete n[l]};function is(){return{app:null,config:{isNativeTag:jo,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Kr=0;function kr(A,e){return function(o,n=null){O(o)||(o=Object.assign({},o)),n!=null&&!F(n)&&(process.env.NODE_ENV!=="production"&&x("root props passed to app.mount() must be an object."),n=null);const s=is(),i=new Set;let l=!1;const c=s.app={_uid:Kr++,_component:o,_props:n,_container:null,_context:s,_instance:null,version:ms,get config(){return s.config},set config(u){process.env.NODE_ENV!=="production"&&x("app.config cannot be replaced. Modify individual options instead.")},use(u,...f){return i.has(u)?process.env.NODE_ENV!=="production"&&x("Plugin has already been applied to target app."):u&&O(u.install)?(i.add(u),u.install(c,...f)):O(u)?(i.add(u),u(c,...f)):process.env.NODE_ENV!=="production"&&x('A plugin must either be a function or an object with an "install" function.'),c},mixin(u){return s.mixins.includes(u)?process.env.NODE_ENV!=="production"&&x("Mixin has already been applied to target app"+(u.name?`: ${u.name}`:"")):s.mixins.push(u),c},component(u,f){return process.env.NODE_ENV!=="production"&&Go(u,s.config),f?(process.env.NODE_ENV!=="production"&&s.components[u]&&x(`Component "${u}" has already been registered in target app.`),s.components[u]=f,c):s.components[u]},directive(u,f){return process.env.NODE_ENV!=="production"&&qn(u),f?(process.env.NODE_ENV!=="production"&&s.directives[u]&&x(`Directive "${u}" has already been registered in target app.`),s.directives[u]=f,c):s.directives[u]},mount(u,f,p){if(l)process.env.NODE_ENV!=="production"&&x("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{process.env.NODE_ENV!=="production"&&u.__vue_app__&&x("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");const E=CA(o,n);return E.appContext=s,process.env.NODE_ENV!=="production"&&(s.reload=()=>{A(RA(E),u,p)}),f&&e?e(E,u):A(E,u,p),l=!0,c._container=u,u.__vue_app__=c,process.env.NODE_ENV!=="production"&&(c._instance=E.component,Ui(c,ms)),Yo(E.component)||E.component.proxy}},unmount(){l?(A(null,c._container),process.env.NODE_ENV!=="production"&&(c._instance=null,Ki(c)),delete c._container.__vue_app__):process.env.NODE_ENV!=="production"&&x("Cannot unmount an app that is not mounted.")},provide(u,f){return process.env.NODE_ENV!=="production"&&u in s.provides&&x(`App already provides property with key "${String(u)}". It will be overwritten with the new value.`),s.provides[u]=f,c}};return c}}function xo(A,e,t,o,n=!1){if(S(A)){A.forEach((E,y)=>xo(E,e&&(S(e)?e[y]:e),t,o,n));return}if(yt(o)&&!n)return;const s=o.shapeFlag&4?Yo(o.component)||o.component.proxy:o.el,i=n?null:s,{i:l,r:c}=A;if(process.env.NODE_ENV!=="production"&&!l){x("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}const u=e&&e.r,f=l.refs===q?l.refs={}:l.refs,p=l.setupState;if(u!=null&&u!==c&&(AA(u)?(f[u]=null,K(p,u)&&(p[u]=null)):nA(u)&&(u.value=null)),O(c))jA(c,l,12,[i,f]);else{const E=AA(c),y=nA(c);if(E||y){const D=()=>{if(A.f){const B=E?K(p,c)?p[c]:f[c]:c.value;n?S(B)&&Vt(B,s):S(B)?B.includes(s)||B.push(s):E?(f[c]=[s],K(p,c)&&(p[c]=f[c])):(c.value=[s],A.k&&(f[A.k]=c.value))}else E?(f[c]=i,K(p,c)&&(p[c]=i)):y?(c.value=i,A.k&&(f[A.k]=i)):process.env.NODE_ENV!=="production"&&x("Invalid template ref type:",c,`(${typeof c})`)};i?(D.id=-1,dA(D,t)):D()}else process.env.NODE_ENV!=="production"&&x("Invalid template ref type:",c,`(${typeof c})`)}}let qe,_A;function FA(A,e){A.appContext.config.performance&&Yt()&&_A.mark(`vue-${e}-${A.uid}`),process.env.NODE_ENV!=="production"&&Ji(A,e,Yt()?_A.now():Date.now())}function bA(A,e){if(A.appContext.config.performance&&Yt()){const t=`vue-${e}-${A.uid}`,o=t+":end";_A.mark(o),_A.measure(`<${Dt(A,A.type)}> ${e}`,t,o),_A.clearMarks(t),_A.clearMarks(o)}process.env.NODE_ENV!=="production"&&ji(A,e,Yt()?_A.now():Date.now())}function Yt(){return qe!==void 0||(typeof window<"u"&&window.performance?(qe=!0,_A=window.performance):qe=!1),qe}function Tr(){const A=[];if(process.env.NODE_ENV!=="production"&&A.length){const e=A.length>1;console.warn(`Feature flag${e?"s":""} ${A.join(", ")} ${e?"are":"is"} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}const dA=_i;function Vr(A){return Jr(A)}function Jr(A,e){Tr();const t=Wo();t.__VUE__=!0,process.env.NODE_ENV!=="production"&&Yn(t.__VUE_DEVTOOLS_GLOBAL_HOOK__,t);const{insert:o,remove:n,patchProp:s,createElement:i,createText:l,createComment:c,setText:u,setElementText:f,parentNode:p,nextSibling:E,setScopeId:y=iA,insertStaticContent:D}=A,B=(r,a,h,g=null,d=null,C=null,N=!1,M=null,I=process.env.NODE_ENV!=="production"&&ce?!1:!!a.dynamicChildren)=>{if(r===a)return;r&&!ge(r,a)&&(g=kt(r),ee(r,d,C,!0),r=null),a.patchFlag===-2&&(I=!1,a.dynamicChildren=null);const{type:m,ref:G,shapeFlag:w}=a;switch(m){case We:J(r,a,h,g);break;case rA:eA(r,a,h,g);break;case Qt:r==null?$(a,h,g,N):process.env.NODE_ENV!=="production"&&v(r,a,h,N);break;case MA:WA(r,a,h,g,d,C,N,M,I);break;default:w&1?UA(r,a,h,g,d,C,N,M,I):w&6?Kt(r,a,h,g,d,C,N,M,I):w&64||w&128?m.process(r,a,h,g,d,C,N,M,I,Ye):process.env.NODE_ENV!=="production"&&x("Invalid VNode type:",m,`(${typeof m})`)}G!=null&&d&&xo(G,r&&r.ref,C,a||r,!a)},J=(r,a,h,g)=>{if(r==null)o(a.el=l(a.children),h,g);else{const d=a.el=r.el;a.children!==r.children&&u(d,a.children)}},eA=(r,a,h,g)=>{r==null?o(a.el=c(a.children||""),h,g):a.el=r.el},$=(r,a,h,g)=>{[r.el,r.anchor]=D(r.children,a,h,g,r.el,r.anchor)},v=(r,a,h,g)=>{if(a.children!==r.children){const d=E(r.anchor);L(r),[a.el,a.anchor]=D(a.children,h,d,g)}else a.el=r.el,a.anchor=r.anchor},k=({el:r,anchor:a},h,g)=>{let d;for(;r&&r!==a;)d=E(r),o(r,h,g),r=d;o(a,h,g)},L=({el:r,anchor:a})=>{let h;for(;r&&r!==a;)h=E(r),n(r),r=h;n(a)},UA=(r,a,h,g,d,C,N,M,I)=>{N=N||a.type==="svg",r==null?KA(a,h,g,d,C,N,M,I):P(r,a,d,C,N,M,I)},KA=(r,a,h,g,d,C,N,M)=>{let I,m;const{type:G,props:w,shapeFlag:Y,transition:R,dirs:V}=r;if(I=r.el=i(r.type,C,w&&w.is,w),Y&8?f(I,r.children):Y&16&&H(r.children,I,null,g,d,C&&G!=="foreignObject",N,M),V&&pe(r,null,g,"created"),w){for(const b in w)b!=="value"&&!At(b)&&s(I,b,null,w[b],C,r.children,g,d,LA);"value"in w&&s(I,"value",null,w.value),(m=w.onVnodeBeforeMount)&&DA(m,g,r)}T(I,r,r.scopeId,N,g),process.env.NODE_ENV!=="production"&&(Object.defineProperty(I,"__vnode",{value:r,enumerable:!1}),Object.defineProperty(I,"__vueParentComponent",{value:g,enumerable:!1})),V&&pe(r,null,g,"beforeMount");const z=(!d||d&&!d.pendingBranch)&&R&&!R.persisted;z&&R.beforeEnter(I),o(I,a,h),((m=w&&w.onVnodeMounted)||z||V)&&dA(()=>{m&&DA(m,g,r),z&&R.enter(I),V&&pe(r,null,g,"mounted")},d)},T=(r,a,h,g,d)=>{if(h&&y(r,h),g)for(let C=0;C<g.length;C++)y(r,g[C]);if(d){let C=d.subTree;if(process.env.NODE_ENV!=="production"&&C.patchFlag>0&&C.patchFlag&2048&&(C=Rn(C.children)||C),a===C){const N=d.vnode;T(r,N,N.scopeId,N.slotScopeIds,d.parent)}}},H=(r,a,h,g,d,C,N,M,I=0)=>{for(let m=I;m<r.length;m++){const G=r[m]=M?$A(r[m]):GA(r[m]);B(null,G,a,h,g,d,C,N,M)}},P=(r,a,h,g,d,C,N)=>{const M=a.el=r.el;let{patchFlag:I,dynamicChildren:m,dirs:G}=a;I|=r.patchFlag&16;const w=r.props||q,Y=a.props||q;let R;h&&de(h,!1),(R=Y.onVnodeBeforeUpdate)&&DA(R,h,a,r),G&&pe(a,r,h,"beforeUpdate"),h&&de(h,!0),process.env.NODE_ENV!=="production"&&ce&&(I=0,N=!1,m=null);const V=d&&a.type!=="foreignObject";if(m?(aA(r.dynamicChildren,m,M,h,g,V,C),process.env.NODE_ENV!=="production"&&h&&h.type.__hmrId&&St(r,a)):N||kA(r,a,M,null,h,g,V,C,!1),I>0){if(I&16)lA(M,a,w,Y,h,g,d);else if(I&2&&w.class!==Y.class&&s(M,"class",null,Y.class,d),I&4&&s(M,"style",w.style,Y.style,d),I&8){const z=a.dynamicProps;for(let b=0;b<z.length;b++){const tA=z[b],BA=w[tA],Se=Y[tA];(Se!==BA||tA==="value")&&s(M,tA,BA,Se,d,r.children,h,g,LA)}}I&1&&r.children!==a.children&&f(M,a.children)}else!N&&m==null&&lA(M,a,w,Y,h,g,d);((R=Y.onVnodeUpdated)||G)&&dA(()=>{R&&DA(R,h,a,r),G&&pe(a,r,h,"updated")},g)},aA=(r,a,h,g,d,C,N)=>{for(let M=0;M<a.length;M++){const I=r[M],m=a[M],G=I.el&&(I.type===MA||!ge(I,m)||I.shapeFlag&70)?p(I.el):h;B(I,m,G,null,g,d,C,N,!0)}},lA=(r,a,h,g,d,C,N)=>{if(h!==g){if(h!==q)for(const M in h)!At(M)&&!(M in g)&&s(r,M,h[M],null,N,a.children,d,C,LA);for(const M in g){if(At(M))continue;const I=g[M],m=h[M];I!==m&&M!=="value"&&s(r,M,m,I,N,a.children,d,C,LA)}"value"in g&&s(r,"value",h.value,g.value)}},WA=(r,a,h,g,d,C,N,M,I)=>{const m=a.el=r?r.el:l(""),G=a.anchor=r?r.anchor:l("");let{patchFlag:w,dynamicChildren:Y,slotScopeIds:R}=a;process.env.NODE_ENV!=="production"&&(ce||w&2048)&&(w=0,I=!1,Y=null),R&&(M=M?M.concat(R):R),r==null?(o(m,h,g),o(G,h,g),H(a.children,h,G,d,C,N,M,I)):w>0&&w&64&&Y&&r.dynamicChildren?(aA(r.dynamicChildren,Y,h,d,C,N,M),process.env.NODE_ENV!=="production"&&d&&d.type.__hmrId?St(r,a):(a.key!=null||d&&a===d.subTree)&&St(r,a,!0)):kA(r,a,h,G,d,C,N,M,I)},Kt=(r,a,h,g,d,C,N,M,I)=>{a.slotScopeIds=M,r==null?a.shapeFlag&512?d.ctx.activate(a,h,g,N,I):Ae(a,h,g,d,C,N,I):gA(r,a,I)},Ae=(r,a,h,g,d,C,N)=>{const M=r.component=Xr(r,g,d);if(process.env.NODE_ENV!=="production"&&M.type.__hmrId&&Qi(M),process.env.NODE_ENV!=="production"&&(dt(r),FA(M,"mount")),be(r)&&(M.ctx.renderer=Ye),process.env.NODE_ENV!=="production"&&FA(M,"init"),$r(M),process.env.NODE_ENV!=="production"&&bA(M,"init"),M.asyncDep){if(d&&d.registerDep(M,j),!r.el){const I=M.subTree=CA(rA);eA(null,I,a,h)}return}j(M,r,a,h,d,C,N),process.env.NODE_ENV!=="production"&&(gt(),bA(M,"mount"))},gA=(r,a,h)=>{const g=a.component=r.component;if(vi(r,a,h))if(g.asyncDep&&!g.asyncResolved){process.env.NODE_ENV!=="production"&&dt(a),Z(g,a,h),process.env.NODE_ENV!=="production"&&gt();return}else g.next=a,Yi(g.update),g.update();else a.el=r.el,g.vnode=a},j=(r,a,h,g,d,C,N)=>{const M=()=>{if(r.isMounted){let{next:G,bu:w,u:Y,parent:R,vnode:V}=r,z=G,b;process.env.NODE_ENV!=="production"&&dt(G||r.vnode),de(r,!1),G?(G.el=V.el,Z(r,G,N)):G=V,w&&De(w),(b=G.props&&G.props.onVnodeBeforeUpdate)&&DA(b,R,G,V),de(r,!0),process.env.NODE_ENV!=="production"&&FA(r,"render");const tA=ro(r);process.env.NODE_ENV!=="production"&&bA(r,"render");const BA=r.subTree;r.subTree=tA,process.env.NODE_ENV!=="production"&&FA(r,"patch"),B(BA,tA,p(BA.el),kt(BA),r,d,C),process.env.NODE_ENV!=="production"&&bA(r,"patch"),G.el=tA.el,z===null&&Xi(r,tA.el),Y&&dA(Y,d),(b=G.props&&G.props.onVnodeUpdated)&&dA(()=>DA(b,R,G,V),d),process.env.NODE_ENV!=="production"&&Sn(r),process.env.NODE_ENV!=="production"&&gt()}else{let G;const{el:w,props:Y}=a,{bm:R,m:V,parent:z}=r,b=yt(a);if(de(r,!1),R&&De(R),!b&&(G=Y&&Y.onVnodeBeforeMount)&&DA(G,z,a),de(r,!0),w&&To){const tA=()=>{process.env.NODE_ENV!=="production"&&FA(r,"render"),r.subTree=ro(r),process.env.NODE_ENV!=="production"&&bA(r,"render"),process.env.NODE_ENV!=="production"&&FA(r,"hydrate"),To(w,r.subTree,r,d,null),process.env.NODE_ENV!=="production"&&bA(r,"hydrate")};b?a.type.__asyncLoader().then(()=>!r.isUnmounted&&tA()):tA()}else{process.env.NODE_ENV!=="production"&&FA(r,"render");const tA=r.subTree=ro(r);process.env.NODE_ENV!=="production"&&bA(r,"render"),process.env.NODE_ENV!=="production"&&FA(r,"patch"),B(null,tA,h,g,r,d,C),process.env.NODE_ENV!=="production"&&bA(r,"patch"),a.el=tA.el}if(V&&dA(V,d),!b&&(G=Y&&Y.onVnodeMounted)){const tA=a;dA(()=>DA(G,z,tA),d)}(a.shapeFlag&256||z&&yt(z.vnode)&&z.vnode.shapeFlag&256)&&r.a&&dA(r.a,d),r.isMounted=!0,process.env.NODE_ENV!=="production"&&ki(r),a=h=g=null}},I=r.effect=new zt(M,()=>mt(m),r.scope),m=r.update=()=>I.run();m.id=r.uid,de(r,!0),process.env.NODE_ENV!=="production"&&(I.onTrack=r.rtc?G=>De(r.rtc,G):void 0,I.onTrigger=r.rtg?G=>De(r.rtg,G):void 0,m.ownerInstance=r),m()},Z=(r,a,h)=>{a.component=r;const g=r.vnode.props;r.vnode=a,r.next=null,Gr(r,a.props,g,h),Ur(r,a.children,h),se(),Nn(),ie()},kA=(r,a,h,g,d,C,N,M,I=!1)=>{const m=r&&r.children,G=r?r.shapeFlag:0,w=a.children,{patchFlag:Y,shapeFlag:R}=a;if(Y>0){if(Y&128){ve(m,w,h,g,d,C,N,M,I);return}else if(Y&256){Uo(m,w,h,g,d,C,N,M,I);return}}R&8?(G&16&&LA(m,d,C),w!==m&&f(h,w)):G&16?R&16?ve(m,w,h,g,d,C,N,M,I):LA(m,d,C,!0):(G&8&&f(h,""),R&16&&H(w,h,g,d,C,N,M,I))},Uo=(r,a,h,g,d,C,N,M,I)=>{r=r||Me,a=a||Me;const m=r.length,G=a.length,w=Math.min(m,G);let Y;for(Y=0;Y<w;Y++){const R=a[Y]=I?$A(a[Y]):GA(a[Y]);B(r[Y],R,h,null,d,C,N,M,I)}m>G?LA(r,d,C,!0,!1,w):H(a,h,g,d,C,N,M,I,w)},ve=(r,a,h,g,d,C,N,M,I)=>{let m=0;const G=a.length;let w=r.length-1,Y=G-1;for(;m<=w&&m<=Y;){const R=r[m],V=a[m]=I?$A(a[m]):GA(a[m]);if(ge(R,V))B(R,V,h,null,d,C,N,M,I);else break;m++}for(;m<=w&&m<=Y;){const R=r[w],V=a[Y]=I?$A(a[Y]):GA(a[Y]);if(ge(R,V))B(R,V,h,null,d,C,N,M,I);else break;w--,Y--}if(m>w){if(m<=Y){const R=Y+1,V=R<G?a[R].el:g;for(;m<=Y;)B(null,a[m]=I?$A(a[m]):GA(a[m]),h,V,d,C,N,M,I),m++}}else if(m>Y)for(;m<=w;)ee(r[m],d,C,!0),m++;else{const R=m,V=m,z=new Map;for(m=V;m<=Y;m++){const fA=a[m]=I?$A(a[m]):GA(a[m]);fA.key!=null&&(process.env.NODE_ENV!=="production"&&z.has(fA.key)&&x("Duplicate keys found during update:",JSON.stringify(fA.key),"Make sure keys are unique."),z.set(fA.key,m))}let b,tA=0;const BA=Y-V+1;let Se=!1,Ys=0;const Xe=new Array(BA);for(m=0;m<BA;m++)Xe[m]=0;for(m=R;m<=w;m++){const fA=r[m];if(tA>=BA){ee(fA,d,C,!0);continue}let TA;if(fA.key!=null)TA=z.get(fA.key);else for(b=V;b<=Y;b++)if(Xe[b-V]===0&&ge(fA,a[b])){TA=b;break}TA===void 0?ee(fA,d,C,!0):(Xe[TA-V]=m+1,TA>=Ys?Ys=TA:Se=!0,B(fA,a[TA],h,null,d,C,N,M,I),tA++)}const Ss=Se?jr(Xe):Me;for(b=Ss.length-1,m=BA-1;m>=0;m--){const fA=V+m,TA=a[fA],Qs=fA+1<G?a[fA+1].el:g;Xe[m]===0?B(null,TA,h,Qs,d,C,N,M,I):Se&&(b<0||m!==Ss[b]?Be(TA,h,Qs,2):b--)}}},Be=(r,a,h,g,d=null)=>{const{el:C,type:N,transition:M,children:I,shapeFlag:m}=r;if(m&6){Be(r.component.subTree,a,h,g);return}if(m&128){r.suspense.move(a,h,g);return}if(m&64){N.move(r,a,h,Ye);return}if(N===MA){o(C,a,h);for(let w=0;w<I.length;w++)Be(I[w],a,h,g);o(r.anchor,a,h);return}if(N===Qt){k(r,a,h);return}if(g!==2&&m&1&&M)if(g===0)M.beforeEnter(C),o(C,a,h),dA(()=>M.enter(C),d);else{const{leave:w,delayLeave:Y,afterLeave:R}=M,V=()=>o(C,a,h),z=()=>{w(C,()=>{V(),R&&R()})};Y?Y(C,V,z):z()}else o(C,a,h)},ee=(r,a,h,g=!1,d=!1)=>{const{type:C,props:N,ref:M,children:I,dynamicChildren:m,shapeFlag:G,patchFlag:w,dirs:Y}=r;if(M!=null&&xo(M,null,h,r,!0),G&256){a.ctx.deactivate(r);return}const R=G&1&&Y,V=!yt(r);let z;if(V&&(z=N&&N.onVnodeBeforeUnmount)&&DA(z,a,r),G&6)uc(r.component,h,g);else{if(G&128){r.suspense.unmount(h,g);return}R&&pe(r,null,a,"beforeUnmount"),G&64?r.type.remove(r,a,h,d,Ye,g):m&&(C!==MA||w>0&&w&64)?LA(m,a,h,!1,!0):(C===MA&&w&384||!d&&G&16)&&LA(I,a,h),g&&Ko(r)}(V&&(z=N&&N.onVnodeUnmounted)||R)&&dA(()=>{z&&DA(z,a,r),R&&pe(r,null,a,"unmounted")},h)},Ko=r=>{const{type:a,el:h,anchor:g,transition:d}=r;if(a===MA){process.env.NODE_ENV!=="production"&&r.patchFlag>0&&r.patchFlag&2048&&d&&!d.persisted?r.children.forEach(N=>{N.type===rA?n(N.el):Ko(N)}):ac(h,g);return}if(a===Qt){L(r);return}const C=()=>{n(h),d&&!d.persisted&&d.afterLeave&&d.afterLeave()};if(r.shapeFlag&1&&d&&!d.persisted){const{leave:N,delayLeave:M}=d,I=()=>N(h,C);M?M(r.el,C,I):I()}else C()},ac=(r,a)=>{let h;for(;r!==a;)h=E(r),n(r),r=h;n(a)},uc=(r,a,h)=>{process.env.NODE_ENV!=="production"&&r.type.__hmrId&&Oi(r);const{bum:g,scope:d,update:C,subTree:N,um:M}=r;g&&De(g),d.stop(),C&&(C.active=!1,ee(N,r,a,h)),M&&dA(M,a),dA(()=>{r.isUnmounted=!0},a),a&&a.pendingBranch&&!a.isUnmounted&&r.asyncDep&&!r.asyncResolved&&r.suspenseId===a.pendingId&&(a.deps--,a.deps===0&&a.resolve()),process.env.NODE_ENV!=="production"&&Vi(r)},LA=(r,a,h,g=!1,d=!1,C=0)=>{for(let N=C;N<r.length;N++)ee(r[N],a,h,g,d)},kt=r=>r.shapeFlag&6?kt(r.component.subTree):r.shapeFlag&128?r.suspense.next():E(r.anchor||r.el),Bs=(r,a,h)=>{r==null?a._vnode&&ee(a._vnode,null,null,!0):B(a._vnode||null,r,a,null,null,null,h),Nn(),wn(),a._vnode=r},Ye={p:B,um:ee,m:Be,r:Ko,mt:Ae,mc:H,pc:kA,pbc:aA,n:kt,o:A};let ko,To;return e&&([ko,To]=e(Ye)),{render:Bs,hydrate:ko,createApp:kr(Bs,ko)}}function de({effect:A,update:e},t){A.allowRecurse=e.allowRecurse=t}function St(A,e,t=!1){const o=A.children,n=e.children;if(S(o)&&S(n))for(let s=0;s<o.length;s++){const i=o[s];let l=n[s];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=n[s]=$A(n[s]),l.el=i.el),t||St(i,l)),l.type===We&&(l.el=i.el),process.env.NODE_ENV!=="production"&&l.type===rA&&!l.el&&(l.el=i.el)}}function jr(A){const e=A.slice(),t=[0];let o,n,s,i,l;const c=A.length;for(o=0;o<c;o++){const u=A[o];if(u!==0){if(n=t[t.length-1],A[n]<u){e[o]=n,t.push(o);continue}for(s=0,i=t.length-1;s<i;)l=s+i>>1,A[t[l]]<u?s=l+1:i=l;u<A[t[s]]&&(s>0&&(e[o]=t[s-1]),t[s]=o)}}for(s=t.length,i=t[s-1];s-- >0;)t[s]=i,i=e[i];return t}const Zr=A=>A.__isTeleport,MA=Symbol(process.env.NODE_ENV!=="production"?"Fragment":void 0),We=Symbol(process.env.NODE_ENV!=="production"?"Text":void 0),rA=Symbol(process.env.NODE_ENV!=="production"?"Comment":void 0),Qt=Symbol(process.env.NODE_ENV!=="production"?"Static":void 0),Le=[];let yA=null;function qA(A=!1){Le.push(yA=A?null:[])}function Fr(){Le.pop(),yA=Le[Le.length-1]||null}let ze=1;function rs(A){ze+=A}function ls(A){return A.dynamicChildren=ze>0?yA||Me:null,Fr(),ze>0&&yA&&yA.push(A),A}function ye(A,e,t,o,n,s){return ls(W(A,e,t,o,n,s,!0))}function No(A,e,t,o,n){return ls(CA(A,e,t,o,n,!0))}function wo(A){return A?A.__v_isVNode===!0:!1}function ge(A,e){return process.env.NODE_ENV!=="production"&&e.shapeFlag&6&&Ne.has(e.type)?(A.shapeFlag&=-257,e.shapeFlag&=-513,!1):A.type===e.type&&A.key===e.key}const br=(...A)=>as(...A),Ot="__vInternal",cs=({key:A})=>A??null,Rt=({ref:A,ref_key:e,ref_for:t})=>A!=null?AA(A)||nA(A)||O(A)?{i:mA,r:A,k:e,f:!!t}:A:null;function W(A,e=null,t=null,o=0,n=null,s=A===MA?0:1,i=!1,l=!1){const c={__v_isVNode:!0,__v_skip:!0,type:A,props:e,key:e&&cs(e),ref:e&&Rt(e),scopeId:Ct,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:o,dynamicProps:n,dynamicChildren:null,appContext:null,ctx:mA};return l?(yo(c,t),s&128&&A.normalize(c)):t&&(c.shapeFlag|=AA(t)?8:16),process.env.NODE_ENV!=="production"&&c.key!==c.key&&x("VNode created with invalid key (NaN). VNode type:",c.type),ze>0&&!i&&yA&&(c.patchFlag>0||s&6)&&c.patchFlag!==32&&yA.push(c),c}const CA=process.env.NODE_ENV!=="production"?br:as;function as(A,e=null,t=null,o=0,n=null,s=!1){if((!A||A===fr)&&(process.env.NODE_ENV!=="production"&&!A&&x(`Invalid vnode type when creating vnode: ${A}.`),A=rA),wo(A)){const l=RA(A,e,!0);return t&&yo(l,t),ze>0&&!s&&yA&&(l.shapeFlag&6?yA[yA.indexOf(A)]=l:yA.push(l)),l.patchFlag|=-2,l}if(Es(A)&&(A=A.__vccOpts),e){e=qr(e);let{class:l,style:c}=e;l&&!AA(l)&&(e.class=Tt(l)),F(c)&&(Pt(c)&&!S(c)&&(c=_({},c)),e.style=wA(c))}const i=AA(A)?1:Pi(A)?128:Zr(A)?64:F(A)?4:O(A)?2:0;return process.env.NODE_ENV!=="production"&&i&4&&Pt(A)&&(A=U(A),x("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,A)),W(A,e,t,o,n,i,s,!0)}function qr(A){return A?Pt(A)||Ot in A?_({},A):A:null}function RA(A,e,t=!1){const{props:o,ref:n,patchFlag:s,children:i}=A,l=e?zr(o||{},e):o;return{__v_isVNode:!0,__v_skip:!0,type:A.type,props:l,key:l&&cs(l),ref:e&&e.ref?t&&n?S(n)?n.concat(Rt(e)):[n,Rt(e)]:Rt(e):n,scopeId:A.scopeId,slotScopeIds:A.slotScopeIds,children:process.env.NODE_ENV!=="production"&&s===-1&&S(i)?i.map(us):i,target:A.target,targetAnchor:A.targetAnchor,staticCount:A.staticCount,shapeFlag:A.shapeFlag,patchFlag:e&&A.type!==MA?s===-1?16:s|16:s,dynamicProps:A.dynamicProps,dynamicChildren:A.dynamicChildren,appContext:A.appContext,dirs:A.dirs,transition:A.transition,component:A.component,suspense:A.suspense,ssContent:A.ssContent&&RA(A.ssContent),ssFallback:A.ssFallback&&RA(A.ssFallback),el:A.el,anchor:A.anchor,ctx:A.ctx}}function us(A){const e=RA(A);return S(A.children)&&(e.children=A.children.map(us)),e}function Wr(A=" ",e=0){return CA(We,null,A,e)}function Lr(A="",e=!1){return e?(qA(),No(rA,null,A)):CA(rA,null,A)}function GA(A){return A==null||typeof A=="boolean"?CA(rA):S(A)?CA(MA,null,A.slice()):typeof A=="object"?$A(A):CA(We,null,String(A))}function $A(A){return A.el===null&&A.patchFlag!==-1||A.memo?A:RA(A)}function yo(A,e){let t=0;const{shapeFlag:o}=A;if(e==null)e=null;else if(S(e))t=16;else if(typeof e=="object")if(o&65){const n=e.default;n&&(n._c&&(n._d=!1),yo(A,n()),n._c&&(n._d=!0));return}else{t=32;const n=e._;!n&&!(Ot in e)?e._ctx=mA:n===3&&mA&&(mA.slots._===1?e._=1:(e._=2,A.patchFlag|=1024))}else O(e)?(e={default:e,_ctx:mA},t=32):(e=String(e),o&64?(t=16,e=[Wr(e)]):t=8);A.children=e,A.shapeFlag|=t}function zr(...A){const e={};for(let t=0;t<A.length;t++){const o=A[t];for(const n in o)if(n==="class")e.class!==o.class&&(e.class=Tt([e.class,o.class]));else if(n==="style")e.style=wA([e.style,o.style]);else if(Oe(n)){const s=e[n],i=o[n];i&&s!==i&&!(S(s)&&s.includes(i))&&(e[n]=s?[].concat(s,i):i)}else n!==""&&(e[n]=o[n])}return e}function DA(A,e,t,o=null){xA(A,e,7,[t,o])}const Hr=is();let vr=0;function Xr(A,e,t){const o=A.type,n=(e?e.appContext:A.appContext)||Hr,s={uid:vr++,vnode:A,type:o,parent:e,appContext:n,root:null,next:null,subTree:null,effect:null,update:null,scope:new Zs(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(n.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Xn(o,n),emitsOptions:On(o,n),emit:null,emitted:null,propsDefaults:q,inheritAttrs:o.inheritAttrs,ctx:q,data:q,props:q,attrs:q,slots:q,refs:q,setupState:q,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return process.env.NODE_ENV!=="production"?s.ctx=dr(s):s.ctx={_:s},s.root=e?e.root:s,s.emit=Fi.bind(null,s),A.ce&&A.ce(s),s}let sA=null;const Pr=()=>sA||mA,Ge=A=>{sA=A,A.scope.on()},Ee=()=>{sA&&sA.scope.off(),sA=null},_r=oA("slot,component");function Go(A,e){const t=e.isNativeTag||jo;(_r(A)||t(A))&&x("Do not use built-in or reserved HTML elements as component id: "+A)}function ps(A){return A.vnode.shapeFlag&4}let He=!1;function $r(A,e=!1){He=e;const{props:t,children:o}=A.vnode,n=ps(A);wr(A,t,n,e),Dr(A,o);const s=n?Al(A,e):void 0;return He=!1,s}function Al(A,e){var t;const o=A.type;if(process.env.NODE_ENV!=="production"){if(o.name&&Go(o.name,A.appContext.config),o.components){const s=Object.keys(o.components);for(let i=0;i<s.length;i++)Go(s[i],A.appContext.config)}if(o.directives){const s=Object.keys(o.directives);for(let i=0;i<s.length;i++)qn(s[i])}o.compilerOptions&&el()&&x('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}A.accessCache=Object.create(null),A.proxy=fn(new Proxy(A.ctx,Wn)),process.env.NODE_ENV!=="production"&&gr(A);const{setup:n}=o;if(n){const s=A.setupContext=n.length>1?tl(A):null;Ge(A),se();const i=jA(n,A,0,[process.env.NODE_ENV!=="production"?Ie(A.props):A.props,s]);if(ie(),Ee(),jt(i)){if(i.then(Ee,Ee),e)return i.then(l=>{fs(A,l,e)}).catch(l=>{Et(l,A,0)});if(A.asyncDep=i,process.env.NODE_ENV!=="production"&&!A.suspense){const l=(t=o.name)!==null&&t!==void 0?t:"Anonymous";x(`Component <${l}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`)}}else fs(A,i,e)}else hs(A,e)}function fs(A,e,t){O(e)?A.type.__ssrInlineRender?A.ssrRender=e:A.render=e:F(e)?(process.env.NODE_ENV!=="production"&&wo(e)&&x("setup() should not return VNodes directly - return a render function instead."),process.env.NODE_ENV!=="production"&&(A.devtoolsRawSetupState=e),A.setupState=gn(e),process.env.NODE_ENV!=="production"&&Er(A)):process.env.NODE_ENV!=="production"&&e!==void 0&&x(`setup() should return an object. Received: ${e===null?"null":typeof e}`),hs(A,t)}let Bo;const el=()=>!Bo;function hs(A,e,t){const o=A.type;if(!A.render){if(!e&&Bo&&!o.render){const n=o.template||Eo(A).template;if(n){process.env.NODE_ENV!=="production"&&FA(A,"compile");const{isCustomElement:s,compilerOptions:i}=A.appContext.config,{delimiters:l,compilerOptions:c}=o,u=_(_({isCustomElement:s,delimiters:l},i),c);o.render=Bo(n,u),process.env.NODE_ENV!=="production"&&bA(A,"compile")}}A.render=o.render||iA}Ge(A),se(),Mr(A),ie(),Ee(),process.env.NODE_ENV!=="production"&&!o.render&&A.render===iA&&!e&&(o.template?x('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):x("Component is missing template or render function."))}function ds(A){return new Proxy(A.attrs,process.env.NODE_ENV!=="production"?{get(e,t){return xt(),hA(A,"get","$attrs"),e[t]},set(){return x("setupContext.attrs is readonly."),!1},deleteProperty(){return x("setupContext.attrs is readonly."),!1}}:{get(e,t){return hA(A,"get","$attrs"),e[t]}})}function tl(A){const e=o=>{process.env.NODE_ENV!=="production"&&A.exposed&&x("expose() should be called only once per setup()."),A.exposed=o||{}};let t;return process.env.NODE_ENV!=="production"?Object.freeze({get attrs(){return t||(t=ds(A))},get slots(){return Ie(A.slots)},get emit(){return(o,...n)=>A.emit(o,...n)},expose:e}):{get attrs(){return t||(t=ds(A))},slots:A.slots,emit:A.emit,expose:e}}function Yo(A){if(A.exposed)return A.exposeProxy||(A.exposeProxy=new Proxy(gn(fn(A.exposed)),{get(e,t){if(t in e)return e[t];if(t in fe)return fe[t](A)},has(e,t){return t in e||t in fe}}))}const ol=/(?:^|[-_])(\w)/g,nl=A=>A.replace(ol,e=>e.toUpperCase()).replace(/[-_]/g,"");function gs(A,e=!0){return O(A)?A.displayName||A.name:A.name||e&&A.__name}function Dt(A,e,t=!1){let o=gs(e);if(!o&&e.__file){const n=e.__file.match(/([^/\\]+)\.\w+$/);n&&(o=n[1])}if(!o&&A&&A.parent){const n=s=>{for(const i in s)if(s[i]===e)return i};o=n(A.components||A.parent.type.components)||n(A.appContext.components)}return o?nl(o):t?"App":"Anonymous"}function Es(A){return O(A)&&"__vccOpts"in A}const sl=(A,e)=>Ci(A,e,He),il=Symbol(process.env.NODE_ENV!=="production"?"ssrContext":""),rl=()=>{{const A=Nt(il);return A||process.env.NODE_ENV!=="production"&&x("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),A}};function So(A){return!!(A&&A.__v_isShallow)}function ll(){if(process.env.NODE_ENV==="production"||typeof window>"u")return;const A={style:"color:#3ba776"},e={style:"color:#0b1bc9"},t={style:"color:#b62e24"},o={style:"color:#9d288c"},n={header(p){return F(p)?p.__isVue?["div",A,"VueInstance"]:nA(p)?["div",{},["span",A,f(p)],"<",l(p.value),">"]:re(p)?["div",{},["span",A,So(p)?"ShallowReactive":"Reactive"],"<",l(p),`>${XA(p)?" (readonly)":""}`]:XA(p)?["div",{},["span",A,So(p)?"ShallowReadonly":"Readonly"],"<",l(p),">"]:null:null},hasBody(p){return p&&p.__isVue},body(p){if(p&&p.__isVue)return["div",{},...s(p.$)]}};function s(p){const E=[];p.type.props&&p.props&&E.push(i("props",U(p.props))),p.setupState!==q&&E.push(i("setup",p.setupState)),p.data!==q&&E.push(i("data",U(p.data)));const y=c(p,"computed");y&&E.push(i("computed",y));const D=c(p,"inject");return D&&E.push(i("injected",D)),E.push(["div",{},["span",{style:o.style+";opacity:0.66"},"$ (internal): "],["object",{object:p}]]),E}function i(p,E){return E=_({},E),Object.keys(E).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},p],["div",{style:"padding-left:1.25em"},...Object.keys(E).map(y=>["div",{},["span",o,y+": "],l(E[y],!1)])]]:["span",{}]}function l(p,E=!0){return typeof p=="number"?["span",e,p]:typeof p=="string"?["span",t,JSON.stringify(p)]:typeof p=="boolean"?["span",o,p]:F(p)?["object",{object:E?U(p):p}]:["span",t,String(p)]}function c(p,E){const y=p.type;if(O(y))return;const D={};for(const B in p.ctx)u(y,B,E)&&(D[B]=p.ctx[B]);return D}function u(p,E,y){const D=p[y];if(S(D)&&D.includes(E)||F(D)&&E in D||p.extends&&u(p.extends,E,y)||p.mixins&&p.mixins.some(B=>u(B,E,y)))return!0}function f(p){return So(p)?"ShallowRef":p.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(n):window.devtoolsFormatters=[n]}const ms="3.2.45",cl="http://www.w3.org/2000/svg",me=typeof document<"u"?document:null,Ms=me&&me.createElement("template"),al={insert:(A,e,t)=>{e.insertBefore(A,t||null)},remove:A=>{const e=A.parentNode;e&&e.removeChild(A)},createElement:(A,e,t,o)=>{const n=e?me.createElementNS(cl,A):me.createElement(A,t?{is:t}:void 0);return A==="select"&&o&&o.multiple!=null&&n.setAttribute("multiple",o.multiple),n},createText:A=>me.createTextNode(A),createComment:A=>me.createComment(A),setText:(A,e)=>{A.nodeValue=e},setElementText:(A,e)=>{A.textContent=e},parentNode:A=>A.parentNode,nextSibling:A=>A.nextSibling,querySelector:A=>me.querySelector(A),setScopeId(A,e){A.setAttribute(e,"")},insertStaticContent(A,e,t,o,n,s){const i=t?t.previousSibling:e.lastChild;if(n&&(n===s||n.nextSibling))for(;e.insertBefore(n.cloneNode(!0),t),!(n===s||!(n=n.nextSibling)););else{Ms.innerHTML=o?`<svg>${A}</svg>`:A;const l=Ms.content;if(o){const c=l.firstChild;for(;c.firstChild;)l.appendChild(c.firstChild);l.removeChild(c)}e.insertBefore(l,t)}return[i?i.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}};function ul(A,e,t){const o=A._vtc;o&&(e=(e?[e,...o]:[...o]).join(" ")),e==null?A.removeAttribute("class"):t?A.setAttribute("class",e):A.className=e}function pl(A,e,t){const o=A.style,n=AA(t);if(t&&!n){for(const s in t)Qo(o,s,t[s]);if(e&&!AA(e))for(const s in e)t[s]==null&&Qo(o,s,"")}else{const s=o.display;n?e!==t&&(o.cssText=t):e&&A.removeAttribute("style"),"_vod"in A&&(o.display=s)}}const fl=/[^\\];\s*$/,Cs=/\s*!important$/;function Qo(A,e,t){if(S(t))t.forEach(o=>Qo(A,e,o));else if(t==null&&(t=""),process.env.NODE_ENV!=="production"&&fl.test(t)&&x(`Unexpected semicolon at the end of '${e}' style value: '${t}'`),e.startsWith("--"))A.setProperty(e,t);else{const o=hl(A,e);Cs.test(t)?A.setProperty(EA(o),t.replace(Cs,""),"important"):A[o]=t}}const Is=["Webkit","Moz","ms"],Oo={};function hl(A,e){const t=Oo[e];if(t)return t;let o=VA(e);if(o!=="filter"&&o in A)return Oo[e]=o;o=tt(o);for(let n=0;n<Is.length;n++){const s=Is[n]+o;if(s in A)return Oo[e]=s}return e}const xs="http://www.w3.org/1999/xlink";function dl(A,e,t,o,n){if(o&&e.startsWith("xlink:"))t==null?A.removeAttributeNS(xs,e.slice(6,e.length)):A.setAttributeNS(xs,e,t);else{const s=Ks(e);t==null||s&&!Vo(t)?A.removeAttribute(e):A.setAttribute(e,s?"":t)}}function gl(A,e,t,o,n,s,i){if(e==="innerHTML"||e==="textContent"){o&&i(o,n,s),A[e]=t??"";return}if(e==="value"&&A.tagName!=="PROGRESS"&&!A.tagName.includes("-")){A._value=t;const c=t??"";(A.value!==c||A.tagName==="OPTION")&&(A.value=c),t==null&&A.removeAttribute(e);return}let l=!1;if(t===""||t==null){const c=typeof A[e];c==="boolean"?t=Vo(t):t==null&&c==="string"?(t="",l=!0):c==="number"&&(t=0,l=!0)}try{A[e]=t}catch(c){process.env.NODE_ENV!=="production"&&!l&&x(`Failed setting prop "${e}" on <${A.tagName.toLowerCase()}>: value ${t} is invalid.`,c)}l&&A.removeAttribute(e)}function El(A,e,t,o){A.addEventListener(e,t,o)}function ml(A,e,t,o){A.removeEventListener(e,t,o)}function Ml(A,e,t,o,n=null){const s=A._vei||(A._vei={}),i=s[e];if(o&&i)i.value=o;else{const[l,c]=Cl(e);if(o){const u=s[e]=Nl(o,n);El(A,l,u,c)}else i&&(ml(A,l,i,c),s[e]=void 0)}}const Ns=/(?:Once|Passive|Capture)$/;function Cl(A){let e;if(Ns.test(A)){e={};let o;for(;o=A.match(Ns);)A=A.slice(0,A.length-o[0].length),e[o[0].toLowerCase()]=!0}return[A[2]===":"?A.slice(3):EA(A.slice(2)),e]}let Ro=0;const Il=Promise.resolve(),xl=()=>Ro||(Il.then(()=>Ro=0),Ro=Date.now());function Nl(A,e){const t=o=>{if(!o._vts)o._vts=Date.now();else if(o._vts<=t.attached)return;xA(wl(o,t.value),e,5,[o])};return t.value=A,t.attached=xl(),t}function wl(A,e){if(S(e)){const t=A.stopImmediatePropagation;return A.stopImmediatePropagation=()=>{t.call(A),A._stopped=!0},e.map(o=>n=>!n._stopped&&o&&o(n))}else return e}const ws=/^on[a-z]/,yl=(A,e,t,o,n=!1,s,i,l,c)=>{e==="class"?ul(A,o,n):e==="style"?pl(A,t,o):Oe(e)?_e(e)||Ml(A,e,t,o,i):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):Gl(A,e,o,n))?gl(A,e,o,s,i,l,c):(e==="true-value"?A._trueValue=o:e==="false-value"&&(A._falseValue=o),dl(A,e,o,n))};function Gl(A,e,t,o){return o?!!(e==="innerHTML"||e==="textContent"||e in A&&ws.test(e)&&O(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&A.tagName==="INPUT"||e==="type"&&A.tagName==="TEXTAREA"||ws.test(e)&&AA(t)?!1:e in A}function Bl(A,e){const t=ue(A);class o extends Do{constructor(s){super(t,s,e)}}return o.def=t,o}const Yl=typeof HTMLElement<"u"?HTMLElement:class{};class Do extends Yl{constructor(e,t={},o){super(),this._def=e,this._props=t,this._instance=null,this._connected=!1,this._resolved=!1,this._numberProps=null,this.shadowRoot&&o?o(this._createVNode(),this.shadowRoot):(process.env.NODE_ENV!=="production"&&this.shadowRoot&&x("Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use `defineSSRCustomElement`."),this.attachShadow({mode:"open"}),this._def.__asyncLoader||this._resolveProps(this._def))}connectedCallback(){this._connected=!0,this._instance||(this._resolved?this._update():this._resolveDef())}disconnectedCallback(){this._connected=!1,Cn(()=>{this._connected||(Gs(null,this.shadowRoot),this._instance=null)})}_resolveDef(){this._resolved=!0;for(let o=0;o<this.attributes.length;o++)this._setAttr(this.attributes[o].name);new MutationObserver(o=>{for(const n of o)this._setAttr(n.attributeName)}).observe(this,{attributes:!0});const e=(o,n=!1)=>{const{props:s,styles:i}=o;let l;if(s&&!S(s))for(const c in s){const u=s[c];(u===Number||u&&u.type===Number)&&(c in this._props&&(this._props[c]=nt(this._props[c])),(l||(l=Object.create(null)))[VA(c)]=!0)}this._numberProps=l,n&&this._resolveProps(o),this._applyStyles(i),this._update()},t=this._def.__asyncLoader;t?t().then(o=>e(o,!0)):e(this._def)}_resolveProps(e){const{props:t}=e,o=S(t)?t:Object.keys(t||{});for(const n of Object.keys(this))n[0]!=="_"&&o.includes(n)&&this._setProp(n,this[n],!0,!1);for(const n of o.map(VA))Object.defineProperty(this,n,{get(){return this._getProp(n)},set(s){this._setProp(n,s)}})}_setAttr(e){let t=this.getAttribute(e);const o=VA(e);this._numberProps&&this._numberProps[o]&&(t=nt(t)),this._setProp(o,t,!1)}_getProp(e){return this._props[e]}_setProp(e,t,o=!0,n=!0){t!==this._props[e]&&(this._props[e]=t,n&&this._instance&&this._update(),o&&(t===!0?this.setAttribute(EA(e),""):typeof t=="string"||typeof t=="number"?this.setAttribute(EA(e),t+""):t||this.removeAttribute(EA(e))))}_update(){Gs(this._createVNode(),this.shadowRoot)}_createVNode(){const e=CA(this._def,_({},this._props));return this._instance||(e.ce=t=>{this._instance=t,t.isCE=!0,process.env.NODE_ENV!=="production"&&(t.ceReload=s=>{this._styles&&(this._styles.forEach(i=>this.shadowRoot.removeChild(i)),this._styles.length=0),this._applyStyles(s),this._instance=null,this._update()});const o=(s,i)=>{this.dispatchEvent(new CustomEvent(s,{detail:i}))};t.emit=(s,...i)=>{o(s,i),EA(s)!==s&&o(EA(s),i)};let n=this;for(;n=n&&(n.parentNode||n.host);)if(n instanceof Do){t.parent=n._instance,t.provides=n._instance.provides;break}}),e}_applyStyles(e){e&&e.forEach(t=>{const o=document.createElement("style");o.textContent=t,this.shadowRoot.appendChild(o),process.env.NODE_ENV!=="production"&&(this._styles||(this._styles=[])).push(o)})}}const Sl={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};tr.props;const Ql=_({patchProp:yl},al);let ys;function Ol(){return ys||(ys=Vr(Ql))}const Gs=(...A)=>{Ol().render(...A)};function Rl(){ll()}process.env.NODE_ENV!=="production"&&Rl();class Dl{constructor(e=null){Qe(this,"x");Qe(this,"y");Qe(this,"z");Qe(this,"w");this.x=199011210,this.y=198904210,this.z=199606230,this.w=(e||Date.now())%4294967296}next(){const e=this.x^this.x<<11;return this.x=this.y,this.y=this.z,this.z=this.w,this.w=this.w^this.w>>>19^(e^e>>>8)}random(){return Math.abs(this.next()/4294967296)}}class X{constructor(e){Qe(this,"_Cells");this._Cells=e.map(t=>({...t}))}get Cells(){return Object.freeze(this._Cells.map(e=>Object.freeze(e)))}Copy(){return new X(this._Cells)}Open(e){let t=this.Copy();return t=this.fillOpen(e),t.IsGameOver()&&t._Cells.forEach((o,n)=>{o.Bomb&&(t._Cells[n].Open=!0,t._Cells[n].Flag=!1)}),t}ToggleFlag(e){const t=this.Copy();return t._Cells[e].Open||(t._Cells[e].Flag=!t._Cells[e].Flag),t}IsComplete(){for(const e of this._Cells)if(!e.Bomb&&!e.Open)return!1;return!0}IsGameOver(){for(const e of this._Cells)if(e.Bomb&&e.Open)return!0;return!1}Size(){return Math.sqrt(this._Cells.length)}OpenCount(){return this._Cells.filter(e=>e.Open).length}BombCount(){return this._Cells.filter(e=>e.Bomb).length}static GetRandomField(e,t,o=new Dl){const n=e*e,s=Array(n).fill(!1),i=Array(n).fill(!1),l=Array(n).fill(!1);for(let c=0;c<t;c++)l[c]=!0;for(let c=n-1;c>=0;c--){const u=Math.floor(o.random()*(c+1)),f=l[c];l[c]=l[u],l[u]=f}return new X(Array(n).fill(null).map((c,u)=>({Open:s[u],Flag:i[u],Bomb:l[u],Count:X.getBombCount(u,l,e)})))}static getBombCount(e,t,o){const[n,s]=X.indexToXy(e,o);let i=0;return[X.xyToIndexOrNaN(n-1,s+0,o),X.xyToIndexOrNaN(n+1,s+0,o),X.xyToIndexOrNaN(n+0,s-1,o),X.xyToIndexOrNaN(n+0,s+1,o),X.xyToIndexOrNaN(n+1,s+1,o),X.xyToIndexOrNaN(n-1,s-1,o),X.xyToIndexOrNaN(n+1,s-1,o),X.xyToIndexOrNaN(n-1,s+1,o)].filter(l=>!isNaN(l)).forEach(l=>{t[l]&&i++}),i}static xyToIndex(e,t,o){if(e<0||e>=o||t<0||t>=o)throw"Fail to convert xy to index";return e+t*o}static xyToIndexOrNaN(e,t,o){return e<0||e>=o||t<0||t>=o?NaN:X.xyToIndex(e,t,o)}static indexToXy(e,t){return[e%t,Math.floor(e/t)]}fillOpen(e){const t=this.Copy(),o=[];for(o.push(e),t._Cells[e].Open=!0,t._Cells[e].Flag=!1;o.length>0;){const n=o.pop();n!==void 0&&t._Cells[n].Count===0&&X.getOpenableAdjacentIndex(t,n).forEach(s=>{t._Cells[s].Open=!0,t._Cells[s].Flag=!1,o.push(s)})}return t}static getOpenableAdjacentIndex(e,t){const[o,n]=X.indexToXy(t,e.Size());return[X.xyToIndexOrNaN(o-1,n+0,e.Size()),X.xyToIndexOrNaN(o+1,n+0,e.Size()),X.xyToIndexOrNaN(o+0,n-1,e.Size()),X.xyToIndexOrNaN(o+0,n+1,e.Size())].filter(s=>!isNaN(s)).filter(s=>!e._Cells[s].Bomb&&!e._Cells[s].Flag&&!e._Cells[s].Open)}}const Ul=["x","y","width","height"],Kl=["x","y"],kl=["display"],Tl=["x","y","width","height"],Vl=["x1","y1","x2","y2","stroke"],Jl=["x1","y1","x2","y2","stroke"],jl=["x1","y1","x2","y2","stroke"],Zl=["x1","y1","x2","y2","stroke"],Fl=["display","x","y"],bl=ue({__name:"CellElement",props:{cell:null,x:null,y:null,cellSize:null,selected:{type:Boolean}},setup(A){const e=A,t=parseInt(e.cellSize.toString()),o=parseInt(e.x.toString()),n=parseInt(e.y.toString()),s=()=>e.cell.Bomb?"💣":e.cell.Count===0?"":e.cell.Count.toString();return(i,l)=>(qA(),ye("g",null,[W("rect",{x:Q(o),y:Q(n),width:Q(t),height:Q(t),stroke:"black",fill:"whitesmoke"},null,8,Ul),W("text",{x:Q(o)+Q(t)/2,y:Q(n)+Q(t)/2,"text-anchor":"middle","dominant-baseline":"central",stroke:"black"},Pe(s()),9,Kl),W("g",{display:e.cell.Open?"none":"block"},[W("rect",{x:Q(o),y:Q(n),width:Q(t),height:Q(t),stroke:"black",fill:"lightgray"},null,8,Tl),W("line",{x1:Q(o)+0,y1:Q(n)+0,x2:Q(o)+Q(t),y2:Q(n)+0,stroke:e.selected?"blue":"white","stroke-width":"3"},null,8,Vl),W("line",{x1:Q(o)+Q(t)-3,y1:Q(n)+0,x2:Q(o)+Q(t)-3,y2:Q(n)+Q(t),stroke:e.selected?"blue":"gray","stroke-width":" 3"},null,8,Jl),W("line",{x1:Q(o)+Q(t)-3,y1:Q(n)+Q(t)-3,x2:Q(o)+0,y2:Q(n)+Q(t)-3,stroke:e.selected?"blue":"gray","stroke-width":"3"},null,8,jl),W("line",{x1:Q(o)+0,y1:Q(n)+Q(t),x2:Q(o)+0,y2:Q(n)+0,stroke:e.selected?"blue":"white","stroke-width":"3"},null,8,Zl)],8,kl),W("text",{display:e.cell.Flag?"block":"none",x:Q(o)+Q(t)/2,y:Q(n)+Q(t)/2,"text-anchor":"middle","dominant-baseline":"central",stroke:"black"},"🚩",8,Fl)]))}}),ql=["width","height"],Wl=["width","height"],Ll=ue({__name:"FieldElement",props:{field:null,clicked:null,cellSize:null,index:null,selected:{type:Boolean}},setup(A){const e=A,t=()=>e.cellSize,o=()=>e.field.Size()*t(),n=c=>{const u=c.offsetX,f=c.offsetY;window.matchMedia("(hover: none) and (pointer: coarse)").matches?i(u,f,"menu"):i(u,f,c.button===0?"open":"flag"),c.preventDefault()},s=c=>{const u=c.offsetX,f=c.offsetY;return i(u,f,"flag"),c.preventDefault(),!1},i=(c,u,f)=>{const p=Math.floor(c/t())+Math.floor(u/t())*e.field.Size();e.clicked(p,f)},l=()=>e.field.Cells.map((c,u)=>{const f=u%e.field.Size()*t(),p=Math.floor(u/e.field.Size())*t();return{x:f,y:p,cell:c,index:u}});return(c,u)=>(qA(),ye("svg",{width:o(),height:o(),onClick:n,onContextmenu:s},[(qA(!0),ye(MA,null,hr(l(),f=>(qA(),No(bl,{key:f.index,cell:f.cell,x:f.x,y:f.y,cellSize:t(),selected:e.selected&&e.index===f.index},null,8,["cell","x","y","cellSize","selected"]))),128)),W("rect",{x:"0",y:"0",width:o(),height:o(),opacity:"0"},null,8,Wl)],40,ql))}}),gc="",Ut=(A,e)=>{const t=A.__vccOpts||A;for(const[o,n]of e)t[o]=n;return t},zl=Ut(Ll,[["__scopeId","data-v-45260c1a"]]),Hl=[(A=>(bi("data-v-171e09e9"),A=A(),qi(),A))(()=>W("div",{class:"title"}," Minesweeper ",-1))],vl={class:"item num"},Xl={class:"item center"},Pl={class:"item num"},_l=ue({__name:"BarElement",props:{field:null,clickReset:null,cellSize:null,time:null},setup(A){const e=A,t=e.cellSize,o=()=>e.field.IsComplete()?"😎":e.field.IsGameOver()?"🥺":"😀";return(n,s)=>(qA(),ye("div",null,[W("div",{class:"title_bar",style:wA({width:e.field.Size()*Q(t)})},Hl,4),W("div",{style:wA({width:e.field.Size()*Q(t)}),class:"bar"},[W("div",vl,[W("b",null,Pe(e.field.BombCount()),1)]),W("div",Xl,[W("div",{class:"button",onClick:s[0]||(s[0]=()=>{e.clickReset()})},Pe(o()),1)]),W("div",Pl,[W("b",null,Pe(e.time),1)])],4)]))}}),Mc="",$l=Ut(_l,[["__scopeId","data-v-171e09e9"]]),Ac={key:0,class:"menu"},ec=["cx","cy"],tc=["x","y"],oc=["cx","cy"],nc=["x","y"],sc=ue({__name:"MenuElement",props:{show:{type:Boolean},x:null,y:null,index:null,cols:null,clicked:null},setup(A){const e=A,t=()=>parseInt(e.index.toString()),o=()=>parseInt(e.cols.toString()),n=()=>t()%o(),s=()=>Math.floor(t()/o()),i=()=>n()/o()<=.7?parseInt(e.x.toString()):parseInt(e.x.toString())-100,l=()=>s()/o()<=.7?parseInt(e.y.toString()):parseInt(e.y.toString())-100;return(c,u)=>e.show?(qA(),ye("svg",Ac,[W("g",null,[W("rect",{x:"0",y:"0",width:"500",height:"500",fill:"white","fill-opacity":"0",onClick:u[0]||(u[0]=()=>e.clicked(t(),"menu"))}),W("circle",{cx:i()+75,cy:l()+25,r:"25",stroke:"black",fill:"white",onClick:u[1]||(u[1]=()=>e.clicked(t(),"flag"))},null,8,ec),W("text",{x:i()+75,y:l()+25,"text-anchor":"middle","dominant-baseline":"central",stroke:"black",onClick:u[2]||(u[2]=()=>e.clicked(t(),"flag"))},"🚩",8,tc),W("circle",{cx:i()+75,cy:l()+75,r:"25",stroke:"black",fill:"white",onClick:u[3]||(u[3]=()=>e.clicked(t(),"open"))},null,8,oc),W("text",{x:i()+75,y:l()+75,"text-anchor":"middle","dominant-baseline":"central",stroke:"black",onClick:u[4]||(u[4]=()=>e.clicked(t(),"open"))},"⛏",8,nc)])])):Lr("",!0)}}),Cc="",ic=Ut(sc,[["__scopeId","data-v-33f83764"]]),rc="data:audio/mpeg;base64,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ue({__name:"GameElement",props:{cols:null,bomb:null,cellSize:null},setup(A){const e=A,t=new Audio(rc),o=Te(X.GetRandomField(e.cols,e.bomb)),n=Te(!1),s=Te(0),i=Te(0),l=Te(0),c=()=>{l.value=setInterval(()=>{i.value+=1},1e3)},u=()=>{i.value=0,clearInterval(l.value)},f=()=>{clearInterval(l.value)},p=()=>{t.playbackRate=1.5,t.play()},E=()=>{u(),o.value=X.GetRandomField(e.cols,e.bomb)},y=(D,B)=>{if(!o.value.IsGameOver()&&!o.value.IsComplete())if(s.value=D,B==="open"){o.value.OpenCount()===0&&c();const J=o.value.Open(D);o.value=J,(J.IsGameOver()||J.IsComplete())&&(f(),J.IsComplete()&&p()),n.value=!1}else B==="menu"?o.value.Cells[D].Open||(n.value=!n.value):(o.value=o.value.ToggleFlag(D),n.value=!1)};return(D,B)=>(qA(),ye(MA,null,[CA($l,{field:Q(o),clickReset:()=>{E()},cellSize:A.cellSize,time:i.value},null,8,["field","clickReset","cellSize","time"]),CA(zl,{field:Q(o),clicked:y,cellSize:A.cellSize,index:s.value,selected:n.value},null,8,["field","cellSize","index","selected"]),CA(ic,{show:n.value,x:Q(X).indexToXy(s.value,Q(o).Size())[0]*A.cellSize,y:Q(X).indexToXy(s.value,Q(o).Size())[1]*A.cellSize,index:s.value,cols:A.cols,clicked:y},null,8,["show","x","y","index","cols"])],64))}}),cc=Bl(Ut(ue({__name:"MineSweeper.ce",props:{cols:null,bomb:null},setup(A){const e=A,t=()=>500/e.cols;return(o,n)=>(qA(),No(lc,{cols:e.cols,bomb:e.bomb,cellSize:t()},null,8,["cols","bomb","cellSize"]))}}),[["styles",[`@font-face{font-family:DSEG7Classic-Bold;font-style:normal;font-weight:400;font-display:swap;src:local("DSEG7Classic-Bold"),url(data:font/woff2;base64,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) format("woff2")}.bar{background-color:#d3d3d3;width:500px;display:flex;border-style:ridge;border-width:5px}.title_bar{width:500px;border-style:ridge;border-width:5px;background-color:#00f;display:flex}.title{width:50%;color:#fff;font-weight:bolder;padding-top:5px}.help{color:#000;margin-left:auto;font-weight:bolder}.item{width:calc(100% / 3);text-align:center;list-style:none;border-style:ridge;border-width:2px}.num{background-color:#321e1e;color:red;text-align:right;padding-right:5px;padding-top:5px;font-family:DSEG7Classic-Bold,sans-serif;font-size:18px}.center{display:flex;justify-content:center}.button{appearance:none;border-style:solid;border-width:3px;background-color:#d3d3d3;border-top-color:#f5f5f5;border-left-color:#f5f5f5;border-bottom-color:gray;border-right-color:gray;width:30px}svg{border-style:ridge;border-width:5px}.menu{position:sticky;margin-top:-550px;margin-left:-0px;height:500px;width:500px;border-width:0px;border-style:none}
`]]]));IA.mine_sweeper=cc,Object.defineProperty(IA,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=mine-sweeper.umd.js.map
